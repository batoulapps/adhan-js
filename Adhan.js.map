{"version":3,"sources":["webpack://adhan/webpack/universalModuleDefinition","webpack://adhan/webpack/bootstrap","webpack://adhan/./src/Coordinates.js","webpack://adhan/./src/MathUtils.js","webpack://adhan/./src/DateUtils.js","webpack://adhan/./src/Astronomical.js","webpack://adhan/./src/SolarCoordinates.js","webpack://adhan/./src/SolarTime.js","webpack://adhan/./src/TimeComponents.js","webpack://adhan/./src/Prayer.js","webpack://adhan/./src/Madhab.js","webpack://adhan/./src/PolarCircleResolution.js","webpack://adhan/./src/PrayerTimes.js","webpack://adhan/./src/HighLatitudeRule.js","webpack://adhan/./src/CalculationParameters.js","webpack://adhan/./src/CalculationMethod.js","webpack://adhan/./src/Qibla.js","webpack://adhan/./src/SunnahTimes.js","webpack://adhan/./src/Adhan.js"],"names":["Coordinates","constructor","latitude","longitude","degreesToRadians","degrees","Math","PI","radiansToDegrees","radians","normalizeToScale","number","max","floor","unwindAngle","angle","quadrantShiftAngle","round","dateByAddingDays","date","days","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","Date","dateByAddingMinutes","dateByAddingSeconds","getTime","roundedMinute","getUTCSeconds","offset","dayOfYear","returnedDayOfYear","feb","Astronomical","isLeapYear","months","i","isValidDate","isNaN","valueOf","meanSolarLongitude","julianCentury","T","term1","term2","term3","pow","L0","meanLunarLongitude","Lp","ascendingLunarNodeLongitude","term4","Omega","meanSolarAnomaly","M","solarEquationOfTheCenter","meanAnomaly","Mrad","sin","apparentSolarLongitude","meanLongitude","Lambda","meanObliquityOfTheEcliptic","apparentObliquityOfTheEcliptic","Epsilon0","O","cos","meanSiderealTime","JD","Theta","nutationInLongitude","solarLongitude","lunarLongitude","ascendingNode","nutationInObliquity","altitudeOfCelestialBody","observerLatitude","declination","localHourAngle","Phi","delta","H","asin","approximateTransit","siderealTime","rightAscension","L","Theta0","a2","Lw","correctedTransit","previousRightAscension","nextRightAscension","m0","a1","a3","a","interpolateAngles","dm","correctedHourAngle","coordinates","afterTransit","previousDeclination","nextDeclination","h0","d2","d1","d3","H0","acos","m","interpolate","h","y2","y1","y3","n","b","c","julianDay","trunc","x","ceil","Y","D","A","B","i0","i1","seasonAdjustedMorningTwilight","sunrise","abs","d","adjustment","dyy","daysSinceSolstice","seasonAdjustedEveningTwilight","sunset","northernOffset","southernOffset","daysInYear","SolarCoordinates","dPsi","dEpsilon","EpsilonApparent","atan2","apparentSiderealTime","SolarTime","observer","solar","prevSolar","nextSolar","solarAltitude","approxTransit","transit","hourAngle","afternoon","shadowLength","tangent","inverse","tan","atan","TimeComponents","utcDate","UTC","Prayer","Fajr","Sunrise","Dhuhr","Asr","Maghrib","Isha","None","Madhab","Shafi","Hanafi","madhab","PolarCircleResolution","AqrabBalad","AqrabYaum","Unresolved","LATITUDE_VARIATION_STEP","UNSAFE_LATITUDE","isValidSolarTime","solarTime","aqrabYaumResolver","daysAdded","direction","testDate","setDate","tomorrow","tomorrowSolarTime","aqrabBaladResolver","sign","polarCircleResolvedValues","resolver","defaultReturn","PrayerTimes","calculationParameters","fajrTime","sunriseTime","dhuhrTime","asrTime","maghribTime","ishaTime","nightFraction","sunsetTime","polarCircleResolver","polarCircleResolution","resolved","setTime","dateComponents","tomorrowSunrise","night","fajrAngle","method","safeFajr","portion","nightPortions","fajr","ishaInterval","ishaAngle","safeIsha","isha","maghribAngle","angleBasedMaghrib","fajrAdjustment","adjustments","methodAdjustments","sunriseAdjustment","dhuhrAdjustment","dhuhr","asrAdjustment","asr","maghribAdjustment","maghrib","ishaAdjustment","timeForPrayer","prayer","currentPrayer","nextPrayer","HighLatitudeRule","MiddleOfTheNight","SeventhOfTheNight","TwilightAngle","recommended","CalculationParameters","methodName","highLatitudeRule","CalculationMethod","MuslimWorldLeague","params","Egyptian","Karachi","UmmAlQura","Dubai","MoonsightingCommittee","NorthAmerica","Kuwait","Qatar","Singapore","Tehran","Turkey","Other","qibla","makkah","SunnahTimes","prayerTimes","nextDay","nextDayPrayerTimes","nightDuration","middleOfTheNight","lastThirdOfTheNight","adhan","Qibla"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFe,MAAMA,WAAN,CAAkB;AAC7BC,aAAW,CAACC,QAAD,EAAWC,SAAX,EAAsB;AAC7B,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AAJ4B,C;;ACA1B,SAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AACtC,SAAQA,OAAO,GAAGC,IAAI,CAACC,EAAhB,GAAsB,KAA7B;AACH;AAEM,SAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AACtC,SAAQA,OAAO,GAAG,KAAX,GAAoBH,IAAI,CAACC,EAAhC;AACH;AAEM,SAASG,gBAAT,CAA0BC,MAA1B,EAAkCC,GAAlC,EAAuC;AAC1C,SAAOD,MAAM,GAAIC,GAAG,GAAIN,IAAI,CAACO,KAAL,CAAWF,MAAM,GAAGC,GAApB,CAAxB;AACH;AAEM,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAC/B,SAAOL,gBAAgB,CAACK,KAAD,EAAQ,KAAR,CAAvB;AACH;AAEM,SAASC,kBAAT,CAA4BD,KAA5B,EAAmC;AACtC,MAAIA,KAAK,IAAI,CAAC,GAAV,IAAiBA,KAAK,IAAI,GAA9B,EAAmC;AAC/B,WAAOA,KAAP;AACH;;AAED,SAAOA,KAAK,GAAI,MAAMT,IAAI,CAACW,KAAL,CAAWF,KAAK,GAAC,GAAjB,CAAtB;AACH,C;;ACtBD;AAEO,SAASG,gBAAT,CAA0BC,IAA1B,EAAgCC,IAAhC,EAAsC;AACzC,QAAMC,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAb;AACA,QAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAL,EAAd;AACA,QAAMC,GAAG,GAAGN,IAAI,CAACO,OAAL,KAAiBN,IAA7B;AACA,QAAMO,KAAK,GAAGR,IAAI,CAACS,QAAL,EAAd;AACA,QAAMC,OAAO,GAAGV,IAAI,CAACW,UAAL,EAAhB;AACA,QAAMC,OAAO,GAAGZ,IAAI,CAACa,UAAL,EAAhB;AACA,SAAO,IAAIC,IAAJ,CAASZ,IAAT,EAAeE,KAAf,EAAsBE,GAAtB,EAA2BE,KAA3B,EAAkCE,OAAlC,EAA2CE,OAA3C,CAAP;AACH;AAEM,SAASG,mBAAT,CAA6Bf,IAA7B,EAAmCU,OAAnC,EAA4C;AAC/C,SAAOM,mBAAmB,CAAChB,IAAD,EAAOU,OAAO,GAAG,EAAjB,CAA1B;AACH;AAEM,SAASM,mBAAT,CAA6BhB,IAA7B,EAAmCY,OAAnC,EAA4C;AAC/C,SAAO,IAAIE,IAAJ,CAASd,IAAI,CAACiB,OAAL,KAAkBL,OAAO,GAAG,IAArC,CAAP;AACH;AAEM,SAASM,aAAT,CAAuBlB,IAAvB,EAA6B;AAChC,QAAMY,OAAO,GAAGZ,IAAI,CAACmB,aAAL,EAAhB;AACA,QAAMC,MAAM,GAAGR,OAAO,IAAI,EAAX,GAAgB,KAAKA,OAArB,GAA+B,CAAC,CAAD,GAAKA,OAAnD;AACA,SAAOI,mBAAmB,CAAChB,IAAD,EAAOoB,MAAP,CAA1B;AACH;AAEM,SAASC,mBAAT,CAAmBrB,IAAnB,EAAyB;AAC5B,MAAIsB,iBAAiB,GAAG,CAAxB;AACA,QAAMC,GAAG,GAAGC,gBAAY,CAACC,UAAb,CAAwBzB,IAAI,CAACG,WAAL,EAAxB,IAA8C,EAA9C,GAAmD,EAA/D;AACA,QAAMuB,MAAM,GAAG,CAAC,EAAD,EAAKH,GAAL,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,EAA8C,EAA9C,CAAf;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3B,IAAI,CAACK,QAAL,EAApB,EAAqCsB,CAAC,EAAtC,EAA0C;AACtCL,qBAAiB,IAAII,MAAM,CAACC,CAAD,CAA3B;AACH;;AAEDL,mBAAiB,IAAItB,IAAI,CAACO,OAAL,EAArB;AAEA,SAAOe,iBAAP;AACH;AAEM,SAASM,WAAT,CAAqB5B,IAArB,EAA2B;AAC9B,SAAOA,IAAI,YAAYc,IAAhB,IAAwB,CAACe,KAAK,CAAC7B,IAAI,CAAC8B,OAAL,EAAD,CAArC;AACH,C;;ACzCD;AACA;AACA;AAEA,MAAMN,YAAY,GAAG;AAEjB;AACAO,oBAAkB,CAACC,aAAD,EAAgB;AAC9B,UAAMC,CAAC,GAAGD,aAAV;AACA;;AACA,UAAME,KAAK,GAAG,WAAd;AACA,UAAMC,KAAK,GAAG,cAAcF,CAA5B;AACA,UAAMG,KAAK,GAAG,YAAYjD,IAAI,CAACkD,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAA1B;AACA,UAAMK,EAAE,GAAGJ,KAAK,GAAGC,KAAR,GAAgBC,KAA3B;AACA,WAAOzC,WAAW,CAAC2C,EAAD,CAAlB;AACH,GAXgB;;AAajB;AACAC,oBAAkB,CAACP,aAAD,EAAgB;AAC9B,UAAMC,CAAC,GAAGD,aAAV;AACA;;AACA,UAAME,KAAK,GAAG,QAAd;AACA,UAAMC,KAAK,GAAG,cAAcF,CAA5B;AACA,UAAMO,EAAE,GAAGN,KAAK,GAAGC,KAAnB;AACA,WAAOxC,WAAW,CAAC6C,EAAD,CAAlB;AACH,GArBgB;;AAuBjBC,6BAA2B,CAACT,aAAD,EAAgB;AACvC,UAAMC,CAAC,GAAGD,aAAV;AACA;;AACA,UAAME,KAAK,GAAG,SAAd;AACA,UAAMC,KAAK,GAAG,cAAcF,CAA5B;AACA,UAAMG,KAAK,GAAG,YAAYjD,IAAI,CAACkD,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAA1B;AACA,UAAMS,KAAK,GAAGvD,IAAI,CAACkD,GAAL,CAASJ,CAAT,EAAY,CAAZ,IAAiB,MAA/B;AACA,UAAMU,KAAK,GAAGT,KAAK,GAAGC,KAAR,GAAgBC,KAAhB,GAAwBM,KAAtC;AACA,WAAO/C,WAAW,CAACgD,KAAD,CAAlB;AACH,GAhCgB;;AAkCjB;AACAC,kBAAgB,CAACZ,aAAD,EAAgB;AAC5B,UAAMC,CAAC,GAAGD,aAAV;AACA;;AACA,UAAME,KAAK,GAAG,SAAd;AACA,UAAMC,KAAK,GAAG,cAAcF,CAA5B;AACA,UAAMG,KAAK,GAAG,YAAYjD,IAAI,CAACkD,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAA1B;AACA,UAAMY,CAAC,GAAGX,KAAK,GAAGC,KAAR,GAAgBC,KAA1B;AACA,WAAOzC,WAAW,CAACkD,CAAD,CAAlB;AACH,GA3CgB;;AA6CjB;AACAC,0BAAwB,CAACd,aAAD,EAAgBe,WAAhB,EAA6B;AACjD,UAAMd,CAAC,GAAGD,aAAV;AACA;;AACA,UAAMgB,IAAI,GAAG/D,gBAAgB,CAAC8D,WAAD,CAA7B;AACA,UAAMb,KAAK,GAAG,CAAC,WAAY,WAAWD,CAAvB,GAA6B,WAAW9C,IAAI,CAACkD,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAAzC,IAA4D9C,IAAI,CAAC8D,GAAL,CAASD,IAAT,CAA1E;AACA,UAAMb,KAAK,GAAG,CAAC,WAAY,WAAWF,CAAxB,IAA8B9C,IAAI,CAAC8D,GAAL,CAAS,IAAID,IAAb,CAA5C;AACA,UAAMZ,KAAK,GAAG,WAAWjD,IAAI,CAAC8D,GAAL,CAAS,IAAID,IAAb,CAAzB;AACA,WAAOd,KAAK,GAAGC,KAAR,GAAgBC,KAAvB;AACH,GAtDgB;;AAwDjB;AACJ;AACIc,wBAAsB,CAAClB,aAAD,EAAgBmB,aAAhB,EAA+B;AACjD,UAAMlB,CAAC,GAAGD,aAAV;AACA,UAAMM,EAAE,GAAGa,aAAX;AACA;;AACA,UAAMnE,SAAS,GAAGsD,EAAE,GAAGd,YAAY,CAACsB,wBAAb,CAAsCb,CAAtC,EAAyCT,YAAY,CAACoB,gBAAb,CAA8BX,CAA9B,CAAzC,CAAvB;AACA,UAAMU,KAAK,GAAG,SAAU,WAAWV,CAAnC;AACA,UAAMmB,MAAM,GAAGpE,SAAS,GAAG,OAAZ,GAAuB,UAAUG,IAAI,CAAC8D,GAAL,CAAShE,gBAAgB,CAAC0D,KAAD,CAAzB,CAAhD;AACA,WAAOhD,WAAW,CAACyD,MAAD,CAAlB;AACH,GAlEgB;;AAoEjB;AACJ;AACA;AACIC,4BAA0B,CAACrB,aAAD,EAAgB;AACtC,UAAMC,CAAC,GAAGD,aAAV;AACA;;AACA,UAAME,KAAK,GAAG,SAAd;AACA,UAAMC,KAAK,GAAG,cAAcF,CAA5B;AACA,UAAMG,KAAK,GAAG,eAAejD,IAAI,CAACkD,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAA7B;AACA,UAAMS,KAAK,GAAG,eAAevD,IAAI,CAACkD,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAA7B;AACA,WAAOC,KAAK,GAAGC,KAAR,GAAgBC,KAAhB,GAAwBM,KAA/B;AACH,GA/EgB;;AAiFjB;AACJ;AACIY,gCAA8B,CAACtB,aAAD,EAAgBqB,0BAAhB,EAA4C;AACtE,UAAMpB,CAAC,GAAGD,aAAV;AACA,UAAMuB,QAAQ,GAAGF,0BAAjB;AACA;;AACA,UAAMG,CAAC,GAAG,SAAU,WAAWvB,CAA/B;AACA,WAAOsB,QAAQ,GAAI,UAAUpE,IAAI,CAACsE,GAAL,CAASxE,gBAAgB,CAACuE,CAAD,CAAzB,CAA7B;AACH,GAzFgB;;AA2FjB;AACAE,kBAAgB,CAAC1B,aAAD,EAAgB;AAC5B,UAAMC,CAAC,GAAGD,aAAV;AACA;;AACA,UAAM2B,EAAE,GAAI1B,CAAC,GAAG,KAAL,GAAc,SAAzB;AACA,UAAMC,KAAK,GAAG,YAAd;AACA,UAAMC,KAAK,GAAG,mBAAmBwB,EAAE,GAAG,OAAxB,CAAd;AACA,UAAMvB,KAAK,GAAG,cAAcjD,IAAI,CAACkD,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAA5B;AACA,UAAMS,KAAK,GAAGvD,IAAI,CAACkD,GAAL,CAASJ,CAAT,EAAY,CAAZ,IAAiB,QAA/B;AACA,UAAM2B,KAAK,GAAG1B,KAAK,GAAGC,KAAR,GAAgBC,KAAhB,GAAwBM,KAAtC;AACA,WAAO/C,WAAW,CAACiE,KAAD,CAAlB;AACH,GAtGgB;;AAwGjBC,qBAAmB,CAAC7B,aAAD,EAAgB8B,cAAhB,EAAgCC,cAAhC,EAAgDC,aAAhD,EAA+D;AAC9E,UAAM1B,EAAE,GAAGwB,cAAX;AACA,UAAMtB,EAAE,GAAGuB,cAAX;AACA,UAAMpB,KAAK,GAAGqB,aAAd;AACA;;AACA,UAAM9B,KAAK,GAAI,CAAC,IAAD,GAAM,IAAP,GAAe/C,IAAI,CAAC8D,GAAL,CAAShE,gBAAgB,CAAC0D,KAAD,CAAzB,CAA7B;AACA,UAAMR,KAAK,GAAK,OAAK,IAAN,GAAchD,IAAI,CAAC8D,GAAL,CAAS,IAAIhE,gBAAgB,CAACqD,EAAD,CAA7B,CAA7B;AACA,UAAMF,KAAK,GAAK,OAAK,IAAN,GAAcjD,IAAI,CAAC8D,GAAL,CAAS,IAAIhE,gBAAgB,CAACuD,EAAD,CAA7B,CAA7B;AACA,UAAME,KAAK,GAAK,OAAK,IAAN,GAAcvD,IAAI,CAAC8D,GAAL,CAAS,IAAIhE,gBAAgB,CAAC0D,KAAD,CAA7B,CAA7B;AACA,WAAOT,KAAK,GAAGC,KAAR,GAAgBC,KAAhB,GAAwBM,KAA/B;AACH,GAlHgB;;AAoHjBuB,qBAAmB,CAACjC,aAAD,EAAgB8B,cAAhB,EAAgCC,cAAhC,EAAgDC,aAAhD,EAA+D;AAC9E,UAAM1B,EAAE,GAAGwB,cAAX;AACA,UAAMtB,EAAE,GAAGuB,cAAX;AACA,UAAMpB,KAAK,GAAGqB,aAAd;AACA;;AACA,UAAM9B,KAAK,GAAK,MAAI,IAAL,GAAa/C,IAAI,CAACsE,GAAL,CAASxE,gBAAgB,CAAC0D,KAAD,CAAzB,CAA5B;AACA,UAAMR,KAAK,GAAI,OAAK,IAAN,GAAchD,IAAI,CAACsE,GAAL,CAAS,IAAIxE,gBAAgB,CAACqD,EAAD,CAA7B,CAA5B;AACA,UAAMF,KAAK,GAAI,OAAK,IAAN,GAAcjD,IAAI,CAACsE,GAAL,CAAS,IAAIxE,gBAAgB,CAACuD,EAAD,CAA7B,CAA5B;AACA,UAAME,KAAK,GAAI,OAAK,IAAN,GAAcvD,IAAI,CAACsE,GAAL,CAAS,IAAIxE,gBAAgB,CAAC0D,KAAD,CAA7B,CAA5B;AACA,WAAOT,KAAK,GAAGC,KAAR,GAAgBC,KAAhB,GAAwBM,KAA/B;AACH,GA9HgB;;AAgIjBwB,yBAAuB,CAACC,gBAAD,EAAmBC,WAAnB,EAAgCC,cAAhC,EAAgD;AACnE,UAAMC,GAAG,GAAGH,gBAAZ;AACA,UAAMI,KAAK,GAAGH,WAAd;AACA,UAAMI,CAAC,GAAGH,cAAV;AACA;;AACA,UAAMnC,KAAK,GAAG/C,IAAI,CAAC8D,GAAL,CAAShE,gBAAgB,CAACqF,GAAD,CAAzB,IAAkCnF,IAAI,CAAC8D,GAAL,CAAShE,gBAAgB,CAACsF,KAAD,CAAzB,CAAhD;AACA,UAAMpC,KAAK,GAAGhD,IAAI,CAACsE,GAAL,CAASxE,gBAAgB,CAACqF,GAAD,CAAzB,IAAkCnF,IAAI,CAACsE,GAAL,CAASxE,gBAAgB,CAACsF,KAAD,CAAzB,CAAlC,GAAsEpF,IAAI,CAACsE,GAAL,CAASxE,gBAAgB,CAACuF,CAAD,CAAzB,CAApF;AACA,WAAOnF,gBAAgB,CAACF,IAAI,CAACsF,IAAL,CAAUvC,KAAK,GAAGC,KAAlB,CAAD,CAAvB;AACH,GAxIgB;;AA0IjBuC,oBAAkB,CAAC1F,SAAD,EAAY2F,YAAZ,EAA0BC,cAA1B,EAA0C;AACxD,UAAMC,CAAC,GAAG7F,SAAV;AACA,UAAM8F,MAAM,GAAGH,YAAf;AACA,UAAMI,EAAE,GAAGH,cAAX;AACA;;AACA,UAAMI,EAAE,GAAGH,CAAC,GAAG,CAAC,CAAhB;AACA,WAAOtF,gBAAgB,CAAC,CAACwF,EAAE,GAAGC,EAAL,GAAUF,MAAX,IAAqB,GAAtB,EAA2B,CAA3B,CAAvB;AACH,GAjJgB;;AAmJjB;AACAG,kBAAgB,CAACP,kBAAD,EAAqB1F,SAArB,EAAgC2F,YAAhC,EAA8CC,cAA9C,EAA8DM,sBAA9D,EAAsFC,kBAAtF,EAA0G;AACtH,UAAMC,EAAE,GAAGV,kBAAX;AACA,UAAMG,CAAC,GAAG7F,SAAV;AACA,UAAM8F,MAAM,GAAGH,YAAf;AACA,UAAMI,EAAE,GAAGH,cAAX;AACA,UAAMS,EAAE,GAAGH,sBAAX;AACA,UAAMI,EAAE,GAAGH,kBAAX;AACA;;AACA,UAAMH,EAAE,GAAGH,CAAC,GAAG,CAAC,CAAhB;AACA,UAAMjB,KAAK,GAAGjE,WAAW,CAAEmF,MAAM,GAAI,aAAaM,EAAzB,CAAzB;AACA,UAAMG,CAAC,GAAG5F,WAAW,CAAC6B,YAAY,CAACgE,iBAAb,CAA+BT,EAA/B,EAAmCM,EAAnC,EAAuCC,EAAvC,EAA2CF,EAA3C,CAAD,CAArB;AACA,UAAMZ,CAAC,GAAG3E,kBAAkB,CAAC+D,KAAK,GAAGoB,EAAR,GAAaO,CAAd,CAA5B;AACA,UAAME,EAAE,GAAGjB,CAAC,GAAG,CAAC,GAAhB;AACA,WAAO,CAACY,EAAE,GAAGK,EAAN,IAAY,EAAnB;AACH,GAlKgB;;AAoKjBC,oBAAkB,CAAChB,kBAAD,EAAqB9E,KAArB,EAA4B+F,WAA5B,EAAyCC,YAAzC,EAAuDjB,YAAvD,EACcC,cADd,EAC8BM,sBAD9B,EACsDC,kBADtD,EAC0Ef,WAD1E,EACuFyB,mBADvF,EAC4GC,eAD5G,EAC6H;AAC3I,UAAMV,EAAE,GAAGV,kBAAX;AACA,UAAMqB,EAAE,GAAGnG,KAAX;AACA,UAAMkF,MAAM,GAAGH,YAAf;AACA,UAAMI,EAAE,GAAGH,cAAX;AACA,UAAMS,EAAE,GAAGH,sBAAX;AACA,UAAMI,EAAE,GAAGH,kBAAX;AACA,UAAMa,EAAE,GAAG5B,WAAX;AACA,UAAM6B,EAAE,GAAGJ,mBAAX;AACA,UAAMK,EAAE,GAAGJ,eAAX;AAEA;;AACA,UAAMd,EAAE,GAAGW,WAAW,CAAC3G,SAAZ,GAAwB,CAAC,CAApC;AACA,UAAMkD,KAAK,GAAG/C,IAAI,CAAC8D,GAAL,CAAShE,gBAAgB,CAAC8G,EAAD,CAAzB,IAAkC5G,IAAI,CAAC8D,GAAL,CAAShE,gBAAgB,CAAC0G,WAAW,CAAC5G,QAAb,CAAzB,IAAmDI,IAAI,CAAC8D,GAAL,CAAShE,gBAAgB,CAAC+G,EAAD,CAAzB,CAAnG;AACA,UAAM7D,KAAK,GAAGhD,IAAI,CAACsE,GAAL,CAASxE,gBAAgB,CAAC0G,WAAW,CAAC5G,QAAb,CAAzB,IAAmDI,IAAI,CAACsE,GAAL,CAASxE,gBAAgB,CAAC+G,EAAD,CAAzB,CAAjE;AACA,UAAMG,EAAE,GAAG9G,gBAAgB,CAACF,IAAI,CAACiH,IAAL,CAAUlE,KAAK,GAAGC,KAAlB,CAAD,CAA3B;AACA,UAAMkE,CAAC,GAAGT,YAAY,GAAGR,EAAE,GAAIe,EAAE,GAAG,GAAd,GAAqBf,EAAE,GAAIe,EAAE,GAAG,GAAtD;AACA,UAAMvC,KAAK,GAAGjE,WAAW,CAAEmF,MAAM,GAAI,aAAauB,CAAzB,CAAzB;AACA,UAAMd,CAAC,GAAG5F,WAAW,CAAC6B,YAAY,CAACgE,iBAAb,CAA+BT,EAA/B,EAAmCM,EAAnC,EAAuCC,EAAvC,EAA2Ce,CAA3C,CAAD,CAArB;AACA,UAAM9B,KAAK,GAAG/C,YAAY,CAAC8E,WAAb,CAAyBN,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCG,CAArC,CAAd;AACA,UAAM7B,CAAC,GAAIZ,KAAK,GAAGoB,EAAR,GAAaO,CAAxB;AACA,UAAMgB,CAAC,GAAG/E,YAAY,CAAC0C,uBAAb,CAAqCyB,WAAW,CAAC5G,QAAjD,EAA2DwF,KAA3D,EAAkEC,CAAlE,CAAV;AACA,UAAMpC,KAAK,GAAGmE,CAAC,GAAGR,EAAlB;AACA,UAAMrD,KAAK,GAAG,MAAMvD,IAAI,CAACsE,GAAL,CAASxE,gBAAgB,CAACsF,KAAD,CAAzB,CAAN,GAA0CpF,IAAI,CAACsE,GAAL,CAASxE,gBAAgB,CAAC0G,WAAW,CAAC5G,QAAb,CAAzB,CAA1C,GAA6FI,IAAI,CAAC8D,GAAL,CAAShE,gBAAgB,CAACuF,CAAD,CAAzB,CAA3G;AACA,UAAMiB,EAAE,GAAGrD,KAAK,GAAGM,KAAnB;AACA,WAAO,CAAC2D,CAAC,GAAGZ,EAAL,IAAW,EAAlB;AACH,GA/LgB;;AAiMjB;AACJ;AACA;AACA;AACIa,aAAW,CAACE,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,CAAb,EAAgB;AACvB;AACA,UAAMpB,CAAC,GAAGiB,EAAE,GAAGC,EAAf;AACA,UAAMG,CAAC,GAAGF,EAAE,GAAGF,EAAf;AACA,UAAMK,CAAC,GAAGD,CAAC,GAAGrB,CAAd;AACA,WAAOiB,EAAE,GAAKG,CAAC,GAAC,CAAH,IAASpB,CAAC,GAAGqB,CAAJ,GAASD,CAAC,GAAGE,CAAtB,CAAb;AACH,GA3MgB;;AA6MjB;AACJ;AACIrB,mBAAiB,CAACgB,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,CAAb,EAAgB;AAC7B;AACA,UAAMpB,CAAC,GAAG5F,WAAW,CAAC6G,EAAE,GAAGC,EAAN,CAArB;AACA,UAAMG,CAAC,GAAGjH,WAAW,CAAC+G,EAAE,GAAGF,EAAN,CAArB;AACA,UAAMK,CAAC,GAAGD,CAAC,GAAGrB,CAAd;AACA,WAAOiB,EAAE,GAAKG,CAAC,GAAC,CAAH,IAASpB,CAAC,GAAGqB,CAAJ,GAASD,CAAC,GAAGE,CAAtB,CAAb;AACH,GArNgB;;AAuNjB;AACAC,WAAS,CAAC5G,IAAD,EAAOE,KAAP,EAAcE,GAAd,EAAmBE,KAAnB,EAA0B;AAC/B;AACA,QAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC9BA,WAAK,GAAG,CAAR;AACH;;AAED,UAAMuG,KAAK,GAAG5H,IAAI,CAAC4H,KAAL,IAAc,UAAUC,CAAV,EAAa;AAAE,aAAOA,CAAC,GAAG,CAAJ,GAAQ7H,IAAI,CAAC8H,IAAL,CAAUD,CAAV,CAAR,GAAuB7H,IAAI,CAACO,KAAL,CAAWsH,CAAX,CAA9B;AAA8C,KAAzF;;AAEA,UAAME,CAAC,GAAGH,KAAK,CAAC3G,KAAK,GAAG,CAAR,GAAYF,IAAZ,GAAmBA,IAAI,GAAG,CAA3B,CAAf;AACA,UAAM2C,CAAC,GAAGkE,KAAK,CAAC3G,KAAK,GAAG,CAAR,GAAYA,KAAZ,GAAoBA,KAAK,GAAG,EAA7B,CAAf;AACA,UAAM+G,CAAC,GAAG7G,GAAG,GAAIE,KAAK,GAAG,EAAzB;AAEA,UAAM4G,CAAC,GAAGL,KAAK,CAACG,CAAC,GAAC,GAAH,CAAf;AACA,UAAMG,CAAC,GAAGN,KAAK,CAAC,IAAIK,CAAJ,GAAQL,KAAK,CAACK,CAAC,GAAC,CAAH,CAAd,CAAf;AAEA,UAAME,EAAE,GAAGP,KAAK,CAAC,UAAUG,CAAC,GAAG,IAAd,CAAD,CAAhB;AACA,UAAMK,EAAE,GAAGR,KAAK,CAAC,WAAWlE,CAAC,GAAG,CAAf,CAAD,CAAhB;AAEA,WAAOyE,EAAE,GAAGC,EAAL,GAAUJ,CAAV,GAAcE,CAAd,GAAkB,MAAzB;AACH,GA3OgB;;AA6OjB;AACArF,eAAa,CAAC8E,SAAD,EAAY;AACrB;AACA,WAAO,CAACA,SAAS,GAAG,SAAb,IAA0B,KAAjC;AACH,GAjPgB;;AAmPjB;AACArF,YAAU,CAACvB,IAAD,EAAO;AACb,QAAIA,IAAI,GAAG,CAAP,KAAa,CAAjB,EAAoB;AAChB,aAAO,KAAP;AACH;;AAED,QAAIA,IAAI,GAAG,GAAP,KAAe,CAAf,IAAoBA,IAAI,GAAG,GAAP,KAAe,CAAvC,EAA0C;AACtC,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH,GA9PgB;;AAgQjBsH,+BAA6B,CAACzI,QAAD,EAAWsC,SAAX,EAAsBnB,IAAtB,EAA4BuH,OAA5B,EAAqC;AAC9D,UAAMlC,CAAC,GAAG,KAAO,QAAQ,IAAT,GAAiBpG,IAAI,CAACuI,GAAL,CAAS3I,QAAT,CAAjC;AACA,UAAM6H,CAAC,GAAG,KAAO,QAAQ,IAAT,GAAiBzH,IAAI,CAACuI,GAAL,CAAS3I,QAAT,CAAjC;AACA,UAAM8H,CAAC,GAAG,KAAO,QAAQ,IAAT,GAAiB1H,IAAI,CAACuI,GAAL,CAAS3I,QAAT,CAAjC;AACA,UAAM4I,CAAC,GAAG,KAAO,QAAQ,IAAT,GAAiBxI,IAAI,CAACuI,GAAL,CAAS3I,QAAT,CAAjC;;AAEA,UAAM6I,UAAU,GAAI,YAAW;AAC3B,YAAMC,GAAG,GAAGrG,YAAY,CAACsG,iBAAb,CAA+BzG,SAA/B,EAA0CnB,IAA1C,EAAgDnB,QAAhD,CAAZ;;AACA,UAAK8I,GAAG,GAAG,EAAX,EAAe;AACX,eAAOtC,CAAC,GAAG,CAAEqB,CAAC,GAAGrB,CAAN,IAAY,IAAZ,GAAmBsC,GAA9B;AACH,OAFD,MAEO,IAAKA,GAAG,GAAG,GAAX,EAAgB;AACnB,eAAOjB,CAAC,GAAG,CAAEC,CAAC,GAAGD,CAAN,IAAY,IAAZ,IAAqBiB,GAAG,GAAG,EAA3B,CAAX;AACH,OAFM,MAEA,IAAKA,GAAG,GAAG,GAAX,EAAiB;AACpB,eAAOhB,CAAC,GAAG,CAAEc,CAAC,GAAGd,CAAN,IAAY,IAAZ,IAAqBgB,GAAG,GAAG,GAA3B,CAAX;AACH,OAFM,MAEA,IAAKA,GAAG,GAAG,GAAX,EAAiB;AACpB,eAAOF,CAAC,GAAG,CAAEd,CAAC,GAAGc,CAAN,IAAY,IAAZ,IAAqBE,GAAG,GAAG,GAA3B,CAAX;AACH,OAFM,MAEA,IAAKA,GAAG,GAAG,GAAX,EAAiB;AACpB,eAAOhB,CAAC,GAAG,CAAED,CAAC,GAAGC,CAAN,IAAY,IAAZ,IAAqBgB,GAAG,GAAG,GAA3B,CAAX;AACH,OAFM,MAEA;AACH,eAAOjB,CAAC,GAAG,CAAErB,CAAC,GAAGqB,CAAN,IAAY,IAAZ,IAAqBiB,GAAG,GAAG,GAA3B,CAAX;AACH;AACJ,KAfkB,EAAnB;;AAiBA,WAAO7G,mBAAmB,CAACyG,OAAD,EAAUtI,IAAI,CAACW,KAAL,CAAW8H,UAAU,GAAG,CAAC,IAAzB,CAAV,CAA1B;AACH,GAxRgB;;AA0RjBG,+BAA6B,CAAChJ,QAAD,EAAWsC,SAAX,EAAsBnB,IAAtB,EAA4B8H,MAA5B,EAAoC;AAC7D,UAAMzC,CAAC,GAAG,KAAO,QAAQ,IAAT,GAAiBpG,IAAI,CAACuI,GAAL,CAAS3I,QAAT,CAAjC;AACA,UAAM6H,CAAC,GAAG,KAAO,QAAQ,IAAT,GAAiBzH,IAAI,CAACuI,GAAL,CAAS3I,QAAT,CAAjC;AACA,UAAM8H,CAAC,GAAG,KAAO,QAAQ,IAAT,GAAiB1H,IAAI,CAACuI,GAAL,CAAS3I,QAAT,CAAjC;AACA,UAAM4I,CAAC,GAAG,KAAO,QAAQ,IAAT,GAAiBxI,IAAI,CAACuI,GAAL,CAAS3I,QAAT,CAAjC;;AAEA,UAAM6I,UAAU,GAAI,YAAW;AAC3B,YAAMC,GAAG,GAAGrG,YAAY,CAACsG,iBAAb,CAA+BzG,SAA/B,EAA0CnB,IAA1C,EAAgDnB,QAAhD,CAAZ;;AACA,UAAK8I,GAAG,GAAG,EAAX,EAAe;AACX,eAAOtC,CAAC,GAAG,CAAEqB,CAAC,GAAGrB,CAAN,IAAY,IAAZ,GAAmBsC,GAA9B;AACH,OAFD,MAEO,IAAKA,GAAG,GAAG,GAAX,EAAgB;AACnB,eAAOjB,CAAC,GAAG,CAAEC,CAAC,GAAGD,CAAN,IAAY,IAAZ,IAAqBiB,GAAG,GAAG,EAA3B,CAAX;AACH,OAFM,MAEA,IAAKA,GAAG,GAAG,GAAX,EAAiB;AACpB,eAAOhB,CAAC,GAAG,CAAEc,CAAC,GAAGd,CAAN,IAAY,IAAZ,IAAqBgB,GAAG,GAAG,GAA3B,CAAX;AACH,OAFM,MAEA,IAAKA,GAAG,GAAG,GAAX,EAAiB;AACpB,eAAOF,CAAC,GAAG,CAAEd,CAAC,GAAGc,CAAN,IAAY,IAAZ,IAAqBE,GAAG,GAAG,GAA3B,CAAX;AACH,OAFM,MAEA,IAAKA,GAAG,GAAG,GAAX,EAAiB;AACpB,eAAOhB,CAAC,GAAG,CAAED,CAAC,GAAGC,CAAN,IAAY,IAAZ,IAAqBgB,GAAG,GAAG,GAA3B,CAAX;AACH,OAFM,MAEA;AACH,eAAOjB,CAAC,GAAG,CAAErB,CAAC,GAAGqB,CAAN,IAAY,IAAZ,IAAqBiB,GAAG,GAAG,GAA3B,CAAX;AACH;AACJ,KAfkB,EAAnB;;AAiBA,WAAO7G,mBAAmB,CAACgH,MAAD,EAAS7I,IAAI,CAACW,KAAL,CAAW8H,UAAU,GAAG,IAAxB,CAAT,CAA1B;AACH,GAlTgB;;AAoTjBE,mBAAiB,CAACzG,SAAD,EAAYnB,IAAZ,EAAkBnB,QAAlB,EAA4B;AACzC,QAAI+I,iBAAiB,GAAG,CAAxB;AACA,UAAMG,cAAc,GAAG,EAAvB;AACA,UAAMC,cAAc,GAAG1G,YAAY,CAACC,UAAb,CAAwBvB,IAAxB,IAAgC,GAAhC,GAAsC,GAA7D;AACA,UAAMiI,UAAU,GAAG3G,YAAY,CAACC,UAAb,CAAwBvB,IAAxB,IAAgC,GAAhC,GAAsC,GAAzD;;AAEA,QAAInB,QAAQ,IAAI,CAAhB,EAAmB;AACf+I,uBAAiB,GAAGzG,SAAS,GAAG4G,cAAhC;;AACA,UAAIH,iBAAiB,IAAIK,UAAzB,EAAqC;AACjCL,yBAAiB,GAAGA,iBAAiB,GAAGK,UAAxC;AACH;AACJ,KALD,MAKO;AACHL,uBAAiB,GAAGzG,SAAS,GAAG6G,cAAhC;;AACA,UAAIJ,iBAAiB,GAAG,CAAxB,EAA2B;AACvBA,yBAAiB,GAAGA,iBAAiB,GAAGK,UAAxC;AACH;AACJ;;AAED,WAAOL,iBAAP;AACH;;AAvUgB,CAArB;AA0UetG,iEAAf,E;;AC9UA;AACA;AAEe,MAAM4G,iCAAN,CAAuB;AAClCtJ,aAAW,CAACgI,SAAD,EAAY;AACnB,UAAM7E,CAAC,GAAGT,gBAAY,CAACQ,aAAb,CAA2B8E,SAA3B,CAAV;AACA,UAAMxE,EAAE,GAAGd,gBAAY,CAACO,kBAAb,CAAgCE,CAAhC,CAAX;AACA,UAAMO,EAAE,GAAGhB,gBAAY,CAACe,kBAAb,CAAgCN,CAAhC,CAAX;AACA,UAAMU,KAAK,GAAGnB,gBAAY,CAACiB,2BAAb,CAAyCR,CAAzC,CAAd;AACA,UAAMmB,MAAM,GAAGnE,gBAAgB,CAACuC,gBAAY,CAAC0B,sBAAb,CAAoCjB,CAApC,EAAuCK,EAAvC,CAAD,CAA/B;AACA,UAAMwC,MAAM,GAAGtD,gBAAY,CAACkC,gBAAb,CAA8BzB,CAA9B,CAAf;AACA,UAAMoG,IAAI,GAAG7G,gBAAY,CAACqC,mBAAb,CAAiC5B,CAAjC,EAAoCK,EAApC,EAAwCE,EAAxC,EAA4CG,KAA5C,CAAb;AACA,UAAM2F,QAAQ,GAAG9G,gBAAY,CAACyC,mBAAb,CAAiChC,CAAjC,EAAoCK,EAApC,EAAwCE,EAAxC,EAA4CG,KAA5C,CAAjB;AACA,UAAMY,QAAQ,GAAG/B,gBAAY,CAAC6B,0BAAb,CAAwCpB,CAAxC,CAAjB;AACA,UAAMsG,eAAe,GAAGtJ,gBAAgB,CAACuC,gBAAY,CAAC8B,8BAAb,CAA4CrB,CAA5C,EAA+CsB,QAA/C,CAAD,CAAxC;AAEA;AACR;AACA;AACA;;AACQ,SAAKa,WAAL,GAAmB/E,gBAAgB,CAACF,IAAI,CAACsF,IAAL,CAAUtF,IAAI,CAAC8D,GAAL,CAASsF,eAAT,IAA4BpJ,IAAI,CAAC8D,GAAL,CAASG,MAAT,CAAtC,CAAD,CAAnC;AAEA;AACR;AACA;AACA;;AACQ,SAAKwB,cAAL,GAAsBjF,WAAW,CAACN,gBAAgB,CAACF,IAAI,CAACqJ,KAAL,CAAWrJ,IAAI,CAACsE,GAAL,CAAS8E,eAAT,IAA4BpJ,IAAI,CAAC8D,GAAL,CAASG,MAAT,CAAvC,EAAyDjE,IAAI,CAACsE,GAAL,CAASL,MAAT,CAAzD,CAAD,CAAjB,CAAjC;AAEA;AACR;AACA;;AACQ,SAAKqF,oBAAL,GAA4B3D,MAAM,GAAMuD,IAAI,GAAG,IAAR,GAAgBlJ,IAAI,CAACsE,GAAL,CAASxE,gBAAgB,CAACsE,QAAQ,GAAG+E,QAAZ,CAAzB,CAAjB,GAAoE,IAA1G;AACH;;AA7BiC,C;;ACHtC;AACA;AACA;AAEe,MAAMI,mBAAN,CAAgB;AAC3B5J,aAAW,CAACkB,IAAD,EAAO2F,WAAP,EAAoB;AAC3B,UAAMmB,SAAS,GAAGtF,gBAAY,CAACsF,SAAb,CAAuB9G,IAAI,CAACG,WAAL,EAAvB,EAA2CH,IAAI,CAACK,QAAL,KAAkB,CAA7D,EAAgEL,IAAI,CAACO,OAAL,EAAhE,EAAgF,CAAhF,CAAlB;AAEA,SAAKoI,QAAL,GAAgBhD,WAAhB;AACA,SAAKiD,KAAL,GAAa,IAAIR,iCAAJ,CAAqBtB,SAArB,CAAb;AAEA,SAAK+B,SAAL,GAAiB,IAAIT,iCAAJ,CAAqBtB,SAAS,GAAG,CAAjC,CAAjB;AACA,SAAKgC,SAAL,GAAiB,IAAIV,iCAAJ,CAAqBtB,SAAS,GAAG,CAAjC,CAAjB;AAEA,UAAM1B,EAAE,GAAG5D,gBAAY,CAACkD,kBAAb,CAAgCiB,WAAW,CAAC3G,SAA5C,EAAuD,KAAK4J,KAAL,CAAWH,oBAAlE,EAAwF,KAAKG,KAAL,CAAWhE,cAAnG,CAAX;AACA,UAAMmE,aAAa,GAAG,CAAC,IAAD,GAAQ,IAA9B;AAEA,SAAKC,aAAL,GAAqB5D,EAArB;AAEA,SAAK6D,OAAL,GAAezH,gBAAY,CAACyD,gBAAb,CAA8BG,EAA9B,EAAkCO,WAAW,CAAC3G,SAA9C,EAAyD,KAAK4J,KAAL,CAAWH,oBAApE,EACX,KAAKG,KAAL,CAAWhE,cADA,EACgB,KAAKiE,SAAL,CAAejE,cAD/B,EAC+C,KAAKkE,SAAL,CAAelE,cAD9D,CAAf;AAGA,SAAK6C,OAAL,GAAejG,gBAAY,CAACkE,kBAAb,CAAgCN,EAAhC,EAAoC2D,aAApC,EAAmDpD,WAAnD,EAAgE,KAAhE,EAAuE,KAAKiD,KAAL,CAAWH,oBAAlF,EACX,KAAKG,KAAL,CAAWhE,cADA,EACgB,KAAKiE,SAAL,CAAejE,cAD/B,EAC+C,KAAKkE,SAAL,CAAelE,cAD9D,EAEX,KAAKgE,KAAL,CAAWxE,WAFA,EAEa,KAAKyE,SAAL,CAAezE,WAF5B,EAEyC,KAAK0E,SAAL,CAAe1E,WAFxD,CAAf;AAIA,SAAK4D,MAAL,GAAcxG,gBAAY,CAACkE,kBAAb,CAAgCN,EAAhC,EAAoC2D,aAApC,EAAmDpD,WAAnD,EAAgE,IAAhE,EAAsE,KAAKiD,KAAL,CAAWH,oBAAjF,EACV,KAAKG,KAAL,CAAWhE,cADD,EACiB,KAAKiE,SAAL,CAAejE,cADhC,EACgD,KAAKkE,SAAL,CAAelE,cAD/D,EAEV,KAAKgE,KAAL,CAAWxE,WAFD,EAEc,KAAKyE,SAAL,CAAezE,WAF7B,EAE0C,KAAK0E,SAAL,CAAe1E,WAFzD,CAAd;AAGH;;AAED8E,WAAS,CAACtJ,KAAD,EAAQgG,YAAR,EAAsB;AAC3B,WAAOpE,gBAAY,CAACkE,kBAAb,CAAgC,KAAKsD,aAArC,EAAoDpJ,KAApD,EAA2D,KAAK+I,QAAhE,EAA0E/C,YAA1E,EAAwF,KAAKgD,KAAL,CAAWH,oBAAnG,EACH,KAAKG,KAAL,CAAWhE,cADR,EACwB,KAAKiE,SAAL,CAAejE,cADvC,EACuD,KAAKkE,SAAL,CAAelE,cADtE,EAEH,KAAKgE,KAAL,CAAWxE,WAFR,EAEqB,KAAKyE,SAAL,CAAezE,WAFpC,EAEiD,KAAK0E,SAAL,CAAe1E,WAFhE,CAAP;AAGH;;AAED+E,WAAS,CAACC,YAAD,EAAe;AACpB;AACA,UAAMC,OAAO,GAAGlK,IAAI,CAACuI,GAAL,CAAS,KAAKiB,QAAL,CAAc5J,QAAd,GAAyB,KAAK6J,KAAL,CAAWxE,WAA7C,CAAhB;AACA,UAAMkF,OAAO,GAAGF,YAAY,GAAGjK,IAAI,CAACoK,GAAL,CAAStK,gBAAgB,CAACoK,OAAD,CAAzB,CAA/B;AACA,UAAMzJ,KAAK,GAAGP,gBAAgB,CAACF,IAAI,CAACqK,IAAL,CAAU,MAAMF,OAAhB,CAAD,CAA9B;AACA,WAAO,KAAKJ,SAAL,CAAetJ,KAAf,EAAsB,IAAtB,CAAP;AACH;;AAvC0B,C;;ACJhB,MAAM6J,cAAN,CAAqB;AAChC3K,aAAW,CAACU,MAAD,EAAS;AAChB,SAAKgB,KAAL,GAAarB,IAAI,CAACO,KAAL,CAAWF,MAAX,CAAb;AACA,SAAKkB,OAAL,GAAevB,IAAI,CAACO,KAAL,CAAW,CAACF,MAAM,GAAG,KAAKgB,KAAf,IAAwB,EAAnC,CAAf;AACA,SAAKI,OAAL,GAAezB,IAAI,CAACO,KAAL,CAAW,CAACF,MAAM,IAAI,KAAKgB,KAAL,GAAa,KAAKE,OAAL,GAAe,EAAhC,CAAP,IAA8C,EAA9C,GAAmD,EAA9D,CAAf;AACA,WAAO,IAAP;AACH;;AAEDgJ,SAAO,CAACxJ,IAAD,EAAOE,KAAP,EAAcJ,IAAd,EAAoB;AACvB,WAAO,IAAIc,IAAJ,CAASA,IAAI,CAAC6I,GAAL,CAASzJ,IAAT,EAAeE,KAAf,EAAsBJ,IAAtB,EAA4B,KAAKQ,KAAjC,EAAwC,KAAKE,OAA7C,EAAsD,KAAKE,OAA3D,CAAT,CAAP;AACH;;AAV+B,C;;ACApC,MAAMgJ,MAAM,GAAG;AACXC,MAAI,EAAE,MADK;AAEXC,SAAO,EAAE,SAFE;AAGXC,OAAK,EAAE,OAHI;AAIXC,KAAG,EAAE,KAJM;AAKXC,SAAO,EAAE,SALE;AAMXC,MAAI,EAAE,MANK;AAOXC,MAAI,EAAE;AAPK,CAAf;AAUeP,qDAAf,E;;ACVO,MAAMQ,MAAM,GAAG;AAClBC,OAAK,EAAE,OADW;AAElBC,QAAM,EAAE;AAFU,CAAf;AAKA,SAASlB,mBAAT,CAAsBmB,MAAtB,EAA8B;AACjC,UAAQA,MAAR;AACI,SAAKH,MAAM,CAACC,KAAZ;AACI,aAAO,CAAP;;AACJ,SAAKD,MAAM,CAACE,MAAZ;AACI,aAAO,CAAP;;AACJ;AACI,YAAM,gBAAN;AANR;AAQH,C;;ACdD;AACA;AAEO,MAAME,qBAAqB,GAAG;AACnCC,YAAU,EAAE,YADuB;AAEnCC,WAAS,EAAE,WAFwB;AAGnCC,YAAU,EAAE;AAHuB,CAA9B;AAMP,MAAMC,uBAAuB,GAAG,GAAhC,C,CAAqC;;AACrC,MAAMC,eAAe,GAAG,EAAxB,C,CAA4B;;AAE5B,MAAMC,gBAAgB,GAAIC,SAAD,IAAeA,SAAS,IAAI,CAAClJ,KAAK,CAACkJ,SAAS,CAACtD,OAAX,CAAnB,IAA0C,CAAC5F,KAAK,CAACkJ,SAAS,CAAC/C,MAAX,CAAxF;;AAEA,MAAMgD,iBAAiB,GAAG,CAACrF,WAAD,EAAc3F,IAAd,EAAoBiL,SAAS,GAAG,CAAhC,EAAmCC,SAAS,GAAG,CAA/C,KAAqD;AAC7E,MAAID,SAAS,GAAG9L,IAAI,CAAC8H,IAAL,CAAU,MAAM,CAAhB,CAAhB,EAAoC;AAClC,WAAO,IAAP;AACD;;AACD,QAAMkE,QAAQ,GAAG,IAAIrK,IAAJ,CAASd,IAAI,CAACiB,OAAL,EAAT,CAAjB;AACAkK,UAAQ,CAACC,OAAT,CAAiBD,QAAQ,CAAC5K,OAAT,KAAsB2K,SAAS,GAAGD,SAAnD;AACA,QAAMI,QAAQ,GAAGtL,gBAAgB,CAACoL,QAAD,EAAW,CAAX,CAAjC;AACA,QAAMJ,SAAS,GAAG,IAAIrC,mBAAJ,CAAcyC,QAAd,EAAwBxF,WAAxB,CAAlB;AACA,QAAM2F,iBAAiB,GAAG,IAAI5C,mBAAJ,CAAc2C,QAAd,EAAwB1F,WAAxB,CAA1B;;AAEA,MAAI,CAACmF,gBAAgB,CAACC,SAAD,CAAjB,IAAgC,CAACD,gBAAgB,CAACQ,iBAAD,CAArD,EAA0E;AACxE,WAAON,iBAAiB,CAACrF,WAAD,EAAc3F,IAAd,EAAoBiL,SAAS,IAAIC,SAAS,GAAG,CAAZ,GAAgB,CAAhB,GAAoB,CAAxB,CAA7B,EAAyD,CAACA,SAA1D,CAAxB;AACD;;AAED,SAAO;AACLlL,QADK;AAELqL,YAFK;AAGL1F,eAHK;AAILoF,aAJK;AAKLO;AALK,GAAP;AAOD,CArBD;;AAuBA,MAAMC,kBAAkB,GAAG,CAAC5F,WAAD,EAAc3F,IAAd,EAAoBjB,QAApB,KAAiC;AAC1D,QAAMgM,SAAS,GAAG,IAAIrC,mBAAJ,CAAc1I,IAAd,EAAoB,EAAE,GAAG2F,WAAL;AAAkB5G;AAAlB,GAApB,CAAlB;AACA,QAAMsM,QAAQ,GAAGtL,gBAAgB,CAACC,IAAD,EAAO,CAAP,CAAjC;AACA,QAAMsL,iBAAiB,GAAG,IAAI5C,mBAAJ,CAAc2C,QAAd,EAAwB,EAAE,GAAG1F,WAAL;AAAkB5G;AAAlB,GAAxB,CAA1B;;AACA,MAAI,CAAC+L,gBAAgB,CAACC,SAAD,CAAjB,IAAgC,CAACD,gBAAgB,CAACQ,iBAAD,CAArD,EAA0E;AACxE,WAAQnM,IAAI,CAACuI,GAAL,CAAS3I,QAAT,KAAsB8L,eAAvB,GACLU,kBAAkB,CAAC5F,WAAD,EAAc3F,IAAd,EAAoBjB,QAAQ,GAAGI,IAAI,CAACqM,IAAL,CAAUzM,QAAV,IAAsB6L,uBAArD,CADb,GAEH,IAFJ;AAGD;;AAED,SAAO;AACL5K,QADK;AAELqL,YAFK;AAGL1F,eAAW,EAAE;AAAE5G,cAAF;AAAYC,eAAS,EAAE2G,WAAW,CAAC3G;AAAnC,KAHR;AAIL+L,aAJK;AAKLO;AALK,GAAP;AAOD,CAjBD;;AAmBO,MAAMG,yBAAyB,GAAG,CAACC,QAAD,EAAW1L,IAAX,EAAiB2F,WAAjB,KAAiC;AACxE,QAAMgG,aAAa,GAAG;AACpB3L,QADoB;AAEpBqL,YAAQ,EAAEtL,gBAAgB,CAACC,IAAD,EAAO,CAAP,CAFN;AAGpB2F,eAHoB;AAIpBoF,aAAS,EAAE,IAAIrC,mBAAJ,CAAc1I,IAAd,EAAoB2F,WAApB,CAJS;AAKpB2F,qBAAiB,EAAE,IAAI5C,mBAAJ,CAAc3I,gBAAgB,CAACC,IAAD,EAAO,CAAP,CAA9B,EAAyC2F,WAAzC;AALC,GAAtB;;AAQA,UAAQ+F,QAAR;AACE,SAAKlB,qBAAqB,CAACE,SAA3B;AAAsC;AACpC,eAAOM,iBAAiB,CAACrF,WAAD,EAAc3F,IAAd,CAAjB,IAAwC2L,aAA/C;AACD;;AACD,SAAKnB,qBAAqB,CAACC,UAA3B;AAAuC;AACrC,cAAM;AAAE1L;AAAF,YAAe4G,WAArB;AACA,eAAO4F,kBAAkB,CAAC5F,WAAD,EAAc3F,IAAd,EAAoBjB,QAAQ,GAAII,IAAI,CAACqM,IAAL,CAAUzM,QAAV,IAAsB6L,uBAAtD,CAAlB,IAAqGe,aAA5G;AACD;;AACD;AAAS;AACP,eAAOA,aAAP;AACD;AAVH;AAYD,CArBM,C;;ACxDP;AACA;AACA;AACA;AACA;AAQA;AACA;AAEe,MAAMC,uBAAN,CAAkB;AAC7B;AACA9M,aAAW,CAAC6G,WAAD,EAAc3F,IAAd,EAAoB6L,qBAApB,EAA2C;AAClD,SAAKlG,WAAL,GAAmBA,WAAnB;AACA,SAAK3F,IAAL,GAAYA,IAAZ;AACA,SAAK6L,qBAAL,GAA6BA,qBAA7B;AAEA,QAAId,SAAS,GAAG,IAAIrC,mBAAJ,CAAc1I,IAAd,EAAoB2F,WAApB,CAAhB;AAEA,QAAImG,QAAJ;AACA,QAAIC,WAAJ;AACA,QAAIC,SAAJ;AACA,QAAIC,OAAJ;AACA,QAAIC,WAAJ;AACA,QAAIC,QAAJ;AAEA,QAAIC,aAAJ;AAEAJ,aAAS,GAAG,IAAIvC,cAAJ,CAAmBsB,SAAS,CAAC9B,OAA7B,EAAsCS,OAAtC,CAA8C1J,IAAI,CAACG,WAAL,EAA9C,EAAkEH,IAAI,CAACK,QAAL,EAAlE,EAAmFL,IAAI,CAACO,OAAL,EAAnF,CAAZ;AACAwL,eAAW,GAAG,IAAItC,cAAJ,CAAmBsB,SAAS,CAACtD,OAA7B,EAAsCiC,OAAtC,CAA8C1J,IAAI,CAACG,WAAL,EAA9C,EAAkEH,IAAI,CAACK,QAAL,EAAlE,EAAmFL,IAAI,CAACO,OAAL,EAAnF,CAAd;AACA,QAAI8L,UAAU,GAAG,IAAI5C,cAAJ,CAAmBsB,SAAS,CAAC/C,MAA7B,EAAqC0B,OAArC,CAA6C1J,IAAI,CAACG,WAAL,EAA7C,EAAiEH,IAAI,CAACK,QAAL,EAAjE,EAAkFL,IAAI,CAACO,OAAL,EAAlF,CAAjB;AACA,QAAI8K,QAAQ,GAAGtL,gBAAgB,CAACC,IAAD,EAAO,CAAP,CAA/B;AACA,QAAIsL,iBAAiB,GAAG,IAAI5C,mBAAJ,CAAc2C,QAAd,EAAwB1F,WAAxB,CAAxB;AAEA,UAAM2G,mBAAmB,GAAGT,qBAAqB,CAACU,qBAAlD;;AACA,QACE,CAAC,CAAC3K,WAAW,CAACmK,WAAD,CAAZ,IAA6B,CAACnK,WAAW,CAACyK,UAAD,CAAzC,IAAyDxK,KAAK,CAACyJ,iBAAiB,CAAC7D,OAAnB,CAA/D,KACG6E,mBAAmB,KAAK9B,qBAAqB,CAACG,UAFnD,EAGE;AACE,YAAM6B,QAAQ,GAAGf,yBAAyB,CAACa,mBAAD,EAAsBtM,IAAtB,EAA4B2F,WAA5B,CAA1C;AACA,WAAKA,WAAL,GAAmB6G,QAAQ,CAAC7G,WAA5B;AACA,WAAK3F,IAAL,CAAUyM,OAAV,CAAkBD,QAAQ,CAACxM,IAAT,CAAciB,OAAd,EAAlB;AACA8J,eAAS,GAAGyB,QAAQ,CAACzB,SAArB;AACAM,cAAQ,GAAGmB,QAAQ,CAACnB,QAApB;AACAC,uBAAiB,GAAGkB,QAAQ,CAAClB,iBAA7B;AACA,YAAMoB,cAAc,GAAG,CAAC1M,IAAI,CAACG,WAAL,EAAD,EAAqBH,IAAI,CAACK,QAAL,EAArB,EAAsCL,IAAI,CAACO,OAAL,EAAtC,CAAvB;AAEAyL,eAAS,GAAG,IAAIvC,cAAJ,CAAmBsB,SAAS,CAAC9B,OAA7B,EAAsCS,OAAtC,CAA8C,GAAGgD,cAAjD,CAAZ;AACAX,iBAAW,GAAG,IAAItC,cAAJ,CAAmBsB,SAAS,CAACtD,OAA7B,EAAsCiC,OAAtC,CAA8C,GAAGgD,cAAjD,CAAd;AACAL,gBAAU,GAAG,IAAI5C,cAAJ,CAAmBsB,SAAS,CAAC/C,MAA7B,EAAqC0B,OAArC,CAA6C,GAAGgD,cAAhD,CAAb;AACH,KAtCiD,CAwClD;;;AACAT,WAAO,GAAG,IAAIxC,cAAJ,CAAmBsB,SAAS,CAAC5B,SAAV,CAAoBC,mBAAY,CAACyC,qBAAqB,CAACtB,MAAvB,CAAhC,CAAnB,EAAoFb,OAApF,CAA4F1J,IAAI,CAACG,WAAL,EAA5F,EAAgHH,IAAI,CAACK,QAAL,EAAhH,EAAiIL,IAAI,CAACO,OAAL,EAAjI,CAAV;AAEA,UAAMoM,eAAe,GAAG,IAAIlD,cAAJ,CAAmB6B,iBAAiB,CAAC7D,OAArC,EAA8CiC,OAA9C,CAAsD2B,QAAQ,CAAClL,WAAT,EAAtD,EAA8EkL,QAAQ,CAAChL,QAAT,EAA9E,EAAmGgL,QAAQ,CAAC9K,OAAT,EAAnG,CAAxB;AACA,UAAMqM,KAAK,GAAG,CAACD,eAAe,GAAGN,UAAnB,IAAiC,IAA/C;AAEAP,YAAQ,GAAG,IAAIrC,cAAJ,CAAmBsB,SAAS,CAAC7B,SAAV,CAAoB,CAAC,CAAD,GAAK2C,qBAAqB,CAACgB,SAA/C,EAA0D,KAA1D,CAAnB,EAAqFnD,OAArF,CAA6F1J,IAAI,CAACG,WAAL,EAA7F,EAAiHH,IAAI,CAACK,QAAL,EAAjH,EAAkIL,IAAI,CAACO,OAAL,EAAlI,CAAX,CA9CkD,CAgDlD;;AACA,QAAIsL,qBAAqB,CAACiB,MAAtB,KAAiC,uBAAjC,IAA4DnH,WAAW,CAAC5G,QAAZ,IAAwB,EAAxF,EAA4F;AACxFqN,mBAAa,GAAGQ,KAAK,GAAG,CAAxB;AACAd,cAAQ,GAAG9K,mBAAmB,CAAC+K,WAAD,EAAc,CAACK,aAAf,CAA9B;AACH;;AAED,UAAMW,QAAQ,GAAI,YAAY;AAC1B,UAAIlB,qBAAqB,CAACiB,MAAtB,KAAiC,uBAArC,EAA8D;AAC1D,eAAOtL,gBAAY,CAACgG,6BAAb,CAA2C7B,WAAW,CAAC5G,QAAvD,EAAiEsC,mBAAS,CAACrB,IAAD,CAA1E,EAAkFA,IAAI,CAACG,WAAL,EAAlF,EAAsG4L,WAAtG,CAAP;AACH,OAFD,MAGK;AACD,cAAMiB,OAAO,GAAGnB,qBAAqB,CAACoB,aAAtB,GAAsCC,IAAtD;AACAd,qBAAa,GAAGY,OAAO,GAAGJ,KAA1B;AACA,eAAO5L,mBAAmB,CAAC+K,WAAD,EAAc,CAACK,aAAf,CAA1B;AACH;AACJ,KATgB,EAAjB;;AAWA,QAAIN,QAAQ,KAAK,IAAb,IAAqBjK,KAAK,CAACiK,QAAQ,CAAC7K,OAAT,EAAD,CAA1B,IAAkD8L,QAAQ,GAAGjB,QAAjE,EAA2E;AACvEA,cAAQ,GAAGiB,QAAX;AACH;;AAED,QAAIlB,qBAAqB,CAACsB,YAAtB,GAAqC,CAAzC,EAA4C;AACxChB,cAAQ,GAAGpL,mBAAmB,CAACsL,UAAD,EAAaR,qBAAqB,CAACsB,YAAnC,CAA9B;AACH,KAFD,MAEO;AACHhB,cAAQ,GAAG,IAAI1C,cAAJ,CAAmBsB,SAAS,CAAC7B,SAAV,CAAoB,CAAC,CAAD,GAAK2C,qBAAqB,CAACuB,SAA/C,EAA0D,IAA1D,CAAnB,EAAoF1D,OAApF,CAA4F1J,IAAI,CAACG,WAAL,EAA5F,EAAgHH,IAAI,CAACK,QAAL,EAAhH,EAAiIL,IAAI,CAACO,OAAL,EAAjI,CAAX,CADG,CAGH;;AACA,UAAIsL,qBAAqB,CAACiB,MAAtB,KAAiC,uBAAjC,IAA4DnH,WAAW,CAAC5G,QAAZ,IAAwB,EAAxF,EAA4F;AACxFqN,qBAAa,GAAGQ,KAAK,GAAG,CAAxB;AACAT,gBAAQ,GAAGnL,mBAAmB,CAACqL,UAAD,EAAaD,aAAb,CAA9B;AACH;;AAED,YAAMiB,QAAQ,GAAI,YAAY;AAC1B,YAAIxB,qBAAqB,CAACiB,MAAtB,KAAiC,uBAArC,EAA8D;AAC1D,iBAAOtL,gBAAY,CAACuG,6BAAb,CAA2CpC,WAAW,CAAC5G,QAAvD,EAAiEsC,mBAAS,CAACrB,IAAD,CAA1E,EAAkFA,IAAI,CAACG,WAAL,EAAlF,EAAsGkM,UAAtG,CAAP;AACH,SAFD,MAGK;AACD,gBAAMW,OAAO,GAAGnB,qBAAqB,CAACoB,aAAtB,GAAsCK,IAAtD;AACAlB,uBAAa,GAAGY,OAAO,GAAGJ,KAA1B;AACA,iBAAO5L,mBAAmB,CAACqL,UAAD,EAAaD,aAAb,CAA1B;AACH;AACJ,OATgB,EAAjB;;AAWA,UAAID,QAAQ,IAAI,IAAZ,IAAoBtK,KAAK,CAACsK,QAAQ,CAAClL,OAAT,EAAD,CAAzB,IAAiDoM,QAAQ,GAAGlB,QAAhE,EAA0E;AACtEA,gBAAQ,GAAGkB,QAAX;AACH;AACJ;;AAEDnB,eAAW,GAAGG,UAAd;;AACA,QAAIR,qBAAqB,CAAC0B,YAA1B,EAAwC;AACpC,YAAMC,iBAAiB,GAAG,IAAI/D,cAAJ,CAAmBsB,SAAS,CAAC7B,SAAV,CAAoB,CAAC,CAAD,GAAK2C,qBAAqB,CAAC0B,YAA/C,EAA6D,IAA7D,CAAnB,EAAuF7D,OAAvF,CAA+F1J,IAAI,CAACG,WAAL,EAA/F,EAAmHH,IAAI,CAACK,QAAL,EAAnH,EAAoIL,IAAI,CAACO,OAAL,EAApI,CAA1B;;AACA,UAAI8L,UAAU,GAAGmB,iBAAb,IAAkCrB,QAAQ,GAAGqB,iBAAjD,EAAoE;AAChEtB,mBAAW,GAAGsB,iBAAd;AACH;AACJ;;AAED,UAAMC,cAAc,GAAG,CAAC5B,qBAAqB,CAAC6B,WAAtB,CAAkCR,IAAlC,IAA0C,CAA3C,KAAiDrB,qBAAqB,CAAC8B,iBAAtB,CAAwCT,IAAxC,IAAgD,CAAjG,CAAvB;AACA,UAAMU,iBAAiB,GAAG,CAAC/B,qBAAqB,CAAC6B,WAAtB,CAAkCjG,OAAlC,IAA6C,CAA9C,KAAoDoE,qBAAqB,CAAC8B,iBAAtB,CAAwClG,OAAxC,IAAmD,CAAvG,CAA1B;AACA,UAAMoG,eAAe,GAAG,CAAChC,qBAAqB,CAAC6B,WAAtB,CAAkCI,KAAlC,IAA2C,CAA5C,KAAkDjC,qBAAqB,CAAC8B,iBAAtB,CAAwCG,KAAxC,IAAiD,CAAnG,CAAxB;AACA,UAAMC,aAAa,GAAG,CAAClC,qBAAqB,CAAC6B,WAAtB,CAAkCM,GAAlC,IAAyC,CAA1C,KAAgDnC,qBAAqB,CAAC8B,iBAAtB,CAAwCK,GAAxC,IAA+C,CAA/F,CAAtB;AACA,UAAMC,iBAAiB,GAAG,CAACpC,qBAAqB,CAAC6B,WAAtB,CAAkCQ,OAAlC,IAA6C,CAA9C,KAAoDrC,qBAAqB,CAAC8B,iBAAtB,CAAwCO,OAAxC,IAAmD,CAAvG,CAA1B;AACA,UAAMC,cAAc,GAAG,CAACtC,qBAAqB,CAAC6B,WAAtB,CAAkCJ,IAAlC,IAA0C,CAA3C,KAAiDzB,qBAAqB,CAAC8B,iBAAtB,CAAwCL,IAAxC,IAAgD,CAAjG,CAAvB;AAEA,SAAKJ,IAAL,GAAYhM,aAAa,CAACH,mBAAmB,CAAC+K,QAAD,EAAW2B,cAAX,CAApB,CAAzB;AACA,SAAKhG,OAAL,GAAevG,aAAa,CAACH,mBAAmB,CAACgL,WAAD,EAAc6B,iBAAd,CAApB,CAA5B;AACA,SAAKE,KAAL,GAAa5M,aAAa,CAACH,mBAAmB,CAACiL,SAAD,EAAY6B,eAAZ,CAApB,CAA1B;AACA,SAAKG,GAAL,GAAW9M,aAAa,CAACH,mBAAmB,CAACkL,OAAD,EAAU8B,aAAV,CAApB,CAAxB;AACA,SAAKG,OAAL,GAAehN,aAAa,CAACH,mBAAmB,CAACmL,WAAD,EAAc+B,iBAAd,CAApB,CAA5B;AACA,SAAKX,IAAL,GAAYpM,aAAa,CAACH,mBAAmB,CAACoL,QAAD,EAAWgC,cAAX,CAApB,CAAzB;AACH;;AAEDC,eAAa,CAACC,MAAD,EAAS;AAClB,QAAIA,MAAM,KAAKzE,UAAM,CAACC,IAAtB,EAA4B;AACxB,aAAO,KAAKqD,IAAZ;AACH,KAFD,MAGK,IAAImB,MAAM,KAAKzE,UAAM,CAACE,OAAtB,EAA+B;AAChC,aAAO,KAAKrC,OAAZ;AACH,KAFI,MAGA,IAAI4G,MAAM,KAAKzE,UAAM,CAACG,KAAtB,EAA6B;AAC9B,aAAO,KAAK+D,KAAZ;AACH,KAFI,MAGA,IAAIO,MAAM,KAAKzE,UAAM,CAACI,GAAtB,EAA2B;AAC5B,aAAO,KAAKgE,GAAZ;AACH,KAFI,MAGA,IAAIK,MAAM,KAAKzE,UAAM,CAACK,OAAtB,EAA+B;AAChC,aAAO,KAAKiE,OAAZ;AACH,KAFI,MAGA,IAAIG,MAAM,KAAKzE,UAAM,CAACM,IAAtB,EAA4B;AAC7B,aAAO,KAAKoD,IAAZ;AACH,KAFI,MAGA;AACD,aAAO,IAAP;AACH;AACJ;;AAEDgB,eAAa,CAACtO,IAAD,EAAO;AAChB,QAAI,OAAOA,IAAP,KAAgB,WAApB,EAAiC;AAC7BA,UAAI,GAAG,IAAIc,IAAJ,EAAP;AACH;;AACD,QAAId,IAAI,IAAI,KAAKsN,IAAjB,EAAuB;AACnB,aAAO1D,UAAM,CAACM,IAAd;AACH,KAFD,MAGK,IAAIlK,IAAI,IAAI,KAAKkO,OAAjB,EAA0B;AAC3B,aAAOtE,UAAM,CAACK,OAAd;AACH,KAFI,MAGA,IAAIjK,IAAI,IAAI,KAAKgO,GAAjB,EAAsB;AACvB,aAAOpE,UAAM,CAACI,GAAd;AACH,KAFI,MAGA,IAAIhK,IAAI,IAAI,KAAK8N,KAAjB,EAAwB;AACzB,aAAOlE,UAAM,CAACG,KAAd;AACH,KAFI,MAGA,IAAI/J,IAAI,IAAI,KAAKyH,OAAjB,EAA0B;AAC3B,aAAOmC,UAAM,CAACE,OAAd;AACH,KAFI,MAGA,IAAI9J,IAAI,IAAI,KAAKkN,IAAjB,EAAuB;AACxB,aAAOtD,UAAM,CAACC,IAAd;AACH,KAFI,MAGA;AACD,aAAOD,UAAM,CAACO,IAAd;AACH;AACJ;;AAEDoE,YAAU,CAACvO,IAAD,EAAO;AACb,QAAI,OAAOA,IAAP,KAAgB,WAApB,EAAiC;AAC7BA,UAAI,GAAG,IAAIc,IAAJ,EAAP;AACH;;AACD,QAAId,IAAI,IAAI,KAAKsN,IAAjB,EAAuB;AACnB,aAAO1D,UAAM,CAACO,IAAd;AACH,KAFD,MAGK,IAAInK,IAAI,IAAI,KAAKkO,OAAjB,EAA0B;AAC3B,aAAOtE,UAAM,CAACM,IAAd;AACH,KAFI,MAGA,IAAIlK,IAAI,IAAI,KAAKgO,GAAjB,EAAsB;AACvB,aAAOpE,UAAM,CAACK,OAAd;AACH,KAFI,MAGA,IAAIjK,IAAI,IAAI,KAAK8N,KAAjB,EAAwB;AACzB,aAAOlE,UAAM,CAACI,GAAd;AACH,KAFI,MAGA,IAAIhK,IAAI,IAAI,KAAKyH,OAAjB,EAA0B;AAC3B,aAAOmC,UAAM,CAACG,KAAd;AACH,KAFI,MAGA,IAAI/J,IAAI,IAAI,KAAKkN,IAAjB,EAAuB;AACxB,aAAOtD,UAAM,CAACE,OAAd;AACH,KAFI,MAGA;AACD,aAAOF,UAAM,CAACC,IAAd;AACH;AACJ;;AArM4B,C;;ACfjC,MAAM2E,gBAAgB,GAAG;AACrBC,kBAAgB,EAAE,kBADG;AAErBC,mBAAiB,EAAE,mBAFE;AAGrBC,eAAa,EAAE,eAHM;;AAKrBC,aAAW,CAACjJ,WAAD,EAAc;AACrB,QAAIA,WAAW,CAAC5G,QAAZ,GAAuB,EAA3B,EAA+B;AAC3B,aAAOyP,gBAAgB,CAACE,iBAAxB;AACH,KAFD,MAEO;AACH,aAAOF,gBAAgB,CAACC,gBAAxB;AACH;AACJ;;AAXoB,CAAzB;AAceD,yEAAf,E;;ACdA;AACA;AACA;AAEe,MAAMK,2CAAN,CAA4B;AACvC/P,aAAW,CAACgQ,UAAD,EAAajC,SAAb,EAAwBO,SAAxB,EAAmCD,YAAnC,EAAiDI,YAAjD,EAA+D;AACtE,SAAKT,MAAL,GAAcgC,UAAU,IAAI,OAA5B;AACA,SAAKjC,SAAL,GAAiBA,SAAS,IAAI,CAA9B;AACA,SAAKO,SAAL,GAAiBA,SAAS,IAAI,CAA9B;AACA,SAAKD,YAAL,GAAoBA,YAAY,IAAI,CAApC;AACA,SAAKI,YAAL,GAAoBA,YAApB;AACA,SAAKhD,MAAL,GAAcH,MAAM,CAACC,KAArB;AACA,SAAK0E,gBAAL,GAAwBP,oBAAgB,CAACC,gBAAzC;AACA,SAAKf,WAAL,GAAmB;AAAER,UAAI,EAAE,CAAR;AAAWzF,aAAO,EAAE,CAApB;AAAuBqG,WAAK,EAAE,CAA9B;AAAiCE,SAAG,EAAE,CAAtC;AAAyCE,aAAO,EAAE,CAAlD;AAAqDZ,UAAI,EAAE;AAA3D,KAAnB;AACA,SAAKK,iBAAL,GAAyB;AAAET,UAAI,EAAE,CAAR;AAAWzF,aAAO,EAAE,CAApB;AAAuBqG,WAAK,EAAE,CAA9B;AAAiCE,SAAG,EAAE,CAAtC;AAAyCE,aAAO,EAAE,CAAlD;AAAqDZ,UAAI,EAAE;AAA3D,KAAzB;AACA,SAAKf,qBAAL,GAA6B/B,qBAAqB,CAACG,UAAnD;AACH;;AAEDsC,eAAa,GAAG;AACZ,YAAQ,KAAK8B,gBAAb;AACI,WAAKP,oBAAgB,CAACC,gBAAtB;AACI,eAAO;AAAEvB,cAAI,EAAE,IAAI,CAAZ;AAAeI,cAAI,EAAE,IAAI;AAAzB,SAAP;;AACJ,WAAKkB,oBAAgB,CAACE,iBAAtB;AACI,eAAO;AAAExB,cAAI,EAAE,IAAI,CAAZ;AAAeI,cAAI,EAAE,IAAI;AAAzB,SAAP;;AACJ,WAAKkB,oBAAgB,CAACG,aAAtB;AACI,eAAO;AAAEzB,cAAI,EAAE,KAAKL,SAAL,GAAiB,EAAzB;AAA6BS,cAAI,EAAE,KAAKF,SAAL,GAAiB;AAApD,SAAP;;AACJ;AACI,cAAO,+EAA8E,KAAK2B,gBAAiB,EAA3G;AARR;AAUH;;AAzBsC,C;;ACJ3C;AAEA,MAAMC,iBAAiB,GAAG;AACtB;AACAC,mBAAiB,GAAG;AAChB,UAAMC,MAAM,GAAG,IAAIL,2CAAJ,CAA0B,mBAA1B,EAA+C,EAA/C,EAAmD,EAAnD,CAAf;AACAK,UAAM,CAACvB,iBAAP,GAA2B;AAAEG,WAAK,EAAE;AAAT,KAA3B;AACA,WAAOoB,MAAP;AACH,GANqB;;AAQtB;AACAC,UAAQ,GAAG;AACP,UAAMD,MAAM,GAAG,IAAIL,2CAAJ,CAA0B,UAA1B,EAAsC,IAAtC,EAA4C,IAA5C,CAAf;AACAK,UAAM,CAACvB,iBAAP,GAA2B;AAAEG,WAAK,EAAE;AAAT,KAA3B;AACA,WAAOoB,MAAP;AACH,GAbqB;;AAetB;AACAE,SAAO,GAAG;AACN,UAAMF,MAAM,GAAG,IAAIL,2CAAJ,CAA0B,SAA1B,EAAqC,EAArC,EAAyC,EAAzC,CAAf;AACAK,UAAM,CAACvB,iBAAP,GAA2B;AAAEG,WAAK,EAAE;AAAT,KAA3B;AACA,WAAOoB,MAAP;AACH,GApBqB;;AAsBtB;AACAG,WAAS,GAAG;AACR,WAAO,IAAIR,2CAAJ,CAA0B,WAA1B,EAAuC,IAAvC,EAA6C,CAA7C,EAAgD,EAAhD,CAAP;AACH,GAzBqB;;AA2BtB;AACAS,OAAK,GAAG;AACJ,UAAMJ,MAAM,GAAG,IAAIL,2CAAJ,CAA0B,OAA1B,EAAmC,IAAnC,EAAyC,IAAzC,CAAf;AACAK,UAAM,CAACvB,iBAAP,GAA2B;AAAElG,aAAO,EAAE,CAAC,CAAZ;AAAeqG,WAAK,EAAE,CAAtB;AAAyBE,SAAG,EAAE,CAA9B;AAAiCE,aAAO,EAAE;AAA1C,KAA3B;AACA,WAAOgB,MAAP;AACH,GAhCqB;;AAkCtB;AACAK,uBAAqB,GAAG;AACpB,UAAML,MAAM,GAAG,IAAIL,2CAAJ,CAA0B,uBAA1B,EAAmD,EAAnD,EAAuD,EAAvD,CAAf;AACAK,UAAM,CAACvB,iBAAP,GAA2B;AAAEG,WAAK,EAAE,CAAT;AAAYI,aAAO,EAAE;AAArB,KAA3B;AACA,WAAOgB,MAAP;AACH,GAvCqB;;AAyCtB;AACAM,cAAY,GAAG;AACX,UAAMN,MAAM,GAAG,IAAIL,2CAAJ,CAA0B,cAA1B,EAA0C,EAA1C,EAA8C,EAA9C,CAAf;AACAK,UAAM,CAACvB,iBAAP,GAA2B;AAAEG,WAAK,EAAE;AAAT,KAA3B;AACA,WAAOoB,MAAP;AACH,GA9CqB;;AAgDtB;AACAO,QAAM,GAAG;AACL,WAAO,IAAIZ,2CAAJ,CAA0B,QAA1B,EAAoC,EAApC,EAAwC,IAAxC,CAAP;AACH,GAnDqB;;AAqDtB;AACAa,OAAK,GAAG;AACJ,WAAO,IAAIb,2CAAJ,CAA0B,OAA1B,EAAmC,EAAnC,EAAuC,CAAvC,EAA0C,EAA1C,CAAP;AACH,GAxDqB;;AA0DtB;AACAc,WAAS,GAAG;AACR,UAAMT,MAAM,GAAG,IAAIL,2CAAJ,CAA0B,WAA1B,EAAuC,EAAvC,EAA2C,EAA3C,CAAf;AACAK,UAAM,CAACvB,iBAAP,GAA2B;AAAEG,WAAK,EAAE;AAAT,KAA3B;AACA,WAAOoB,MAAP;AACH,GA/DqB;;AAiEtB;AACAU,QAAM,GAAG;AACL,UAAMV,MAAM,GAAG,IAAIL,2CAAJ,CAA0B,QAA1B,EAAoC,IAApC,EAA0C,EAA1C,EAA8C,CAA9C,EAAiD,GAAjD,CAAf;AACA,WAAOK,MAAP;AACH,GArEqB;;AAuEtB;AACAW,QAAM,GAAG;AACL,UAAMX,MAAM,GAAG,IAAIL,2CAAJ,CAA0B,QAA1B,EAAoC,EAApC,EAAwC,EAAxC,CAAf;AACAK,UAAM,CAACvB,iBAAP,GAA2B;AAAElG,aAAO,EAAE,CAAC,CAAZ;AAAeqG,WAAK,EAAE,CAAtB;AAAyBE,SAAG,EAAE,CAA9B;AAAiCE,aAAO,EAAE;AAA1C,KAA3B;AACA,WAAOgB,MAAP;AACH,GA5EqB;;AA8EtB;AACAY,OAAK,GAAG;AACJ,WAAO,IAAIjB,2CAAJ,CAA0B,OAA1B,EAAmC,CAAnC,EAAsC,CAAtC,CAAP;AACH;;AAjFqB,CAA1B;AAoFeG,2EAAf,E;;ACtFA;AACA;AAEe,SAASe,KAAT,CAAepK,WAAf,EAA4B;AACvC,QAAMqK,MAAM,GAAG,IAAInR,WAAJ,CAAgB,UAAhB,EAA4B,UAA5B,CAAf,CADuC,CAGvC;;AACA,QAAMqD,KAAK,GACP/C,IAAI,CAAC8D,GAAL,CAAShE,gBAAgB,CAAC+Q,MAAM,CAAChR,SAAR,CAAhB,GACTC,gBAAgB,CAAC0G,WAAW,CAAC3G,SAAb,CADhB,CADJ;AAIA,QAAMmD,KAAK,GACPhD,IAAI,CAACsE,GAAL,CAASxE,gBAAgB,CAAC0G,WAAW,CAAC5G,QAAb,CAAzB,IACAI,IAAI,CAACoK,GAAL,CAAStK,gBAAgB,CAAC+Q,MAAM,CAACjR,QAAR,CAAzB,CAFJ;AAIA,QAAMqD,KAAK,GACPjD,IAAI,CAAC8D,GAAL,CAAShE,gBAAgB,CAAC0G,WAAW,CAAC5G,QAAb,CAAzB,IACAI,IAAI,CAACsE,GAAL,CAASxE,gBAAgB,CAAC+Q,MAAM,CAAChR,SAAR,CAAhB,GACTC,gBAAgB,CAAC0G,WAAW,CAAC3G,SAAb,CADhB,CAFJ;AAKA,QAAMY,KAAK,GAAGT,IAAI,CAACqJ,KAAL,CAAWtG,KAAX,EAAkBC,KAAK,GAAGC,KAA1B,CAAd;AAEA,SAAOzC,WAAW,CAACN,gBAAgB,CAACO,KAAD,CAAjB,CAAlB;AACH,C;;ACvBD;AACA;AAEe,MAAMqQ,uBAAN,CAAkB;AAC7BnR,aAAW,CAACoR,WAAD,EAAc;AACrB,UAAMlQ,IAAI,GAAGkQ,WAAW,CAAClQ,IAAzB;AACA,UAAMmQ,OAAO,GAAGpQ,gBAAgB,CAACC,IAAD,EAAO,CAAP,CAAhC;AACA,UAAMoQ,kBAAkB,GAAG,IAAIxE,uBAAJ,CAAgBsE,WAAW,CAACvK,WAA5B,EAAyCwK,OAAzC,EAAkDD,WAAW,CAACrE,qBAA9D,CAA3B;AAEA,UAAMwE,aAAa,GAAG,CAACD,kBAAkB,CAAClD,IAAnB,CAAwBjM,OAAxB,KAAoCiP,WAAW,CAAChC,OAAZ,CAAoBjN,OAApB,EAArC,IAAsE,MAA5F;AAEA,SAAKqP,gBAAL,GAAwBpP,aAAa,CAACF,mBAAmB,CAACkP,WAAW,CAAChC,OAAb,EAAsBmC,aAAa,GAAG,CAAtC,CAApB,CAArC;AACA,SAAKE,mBAAL,GAA2BrP,aAAa,CAACF,mBAAmB,CAACkP,WAAW,CAAChC,OAAb,EAAsBmC,aAAa,IAAI,IAAI,CAAR,CAAnC,CAApB,CAAxC;AACH;;AAV4B,C;;ACHjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMG,KAAK,GAAG;AACV5G,oBADU;AAEVQ,gBAFU;AAGVoE,wCAHU;AAIV3P,0BAJU;AAKVgQ,oEALU;AAMVG,0CANU;AAOVpD,sCAPU;AAQVqE,sCARU;AASVQ,cATU;AAUVjG,8CAAqBA;AAVX,CAAd;AAaegG,gFAAf,E","file":"Adhan.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"adhan\"] = factory();\n\telse\n\t\troot[\"adhan\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class Coordinates {\n    constructor(latitude, longitude) {\n        this.latitude = latitude;\n        this.longitude = longitude;\n    }\n}\n","export function degreesToRadians(degrees) {\n    return (degrees * Math.PI) / 180.0;\n}\n\nexport function radiansToDegrees(radians) {\n    return (radians * 180.0) / Math.PI;\n}\n\nexport function normalizeToScale(number, max) {\n    return number - (max * (Math.floor(number / max)))\n}\n\nexport function unwindAngle(angle) {\n    return normalizeToScale(angle, 360.0);\n}\n\nexport function quadrantShiftAngle(angle) {\n    if (angle >= -180 && angle <= 180) {\n        return angle;\n    }\n\n    return angle - (360 * Math.round(angle/360));\n}\n","import Astronomical from './Astronomical';\n\nexport function dateByAddingDays(date, days) {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate() + days;\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    return new Date(year, month, day, hours, minutes, seconds);\n}\n\nexport function dateByAddingMinutes(date, minutes) {\n    return dateByAddingSeconds(date, minutes * 60);\n}\n\nexport function dateByAddingSeconds(date, seconds) {\n    return new Date(date.getTime() + (seconds * 1000));\n}\n\nexport function roundedMinute(date) {\n    const seconds = date.getUTCSeconds();\n    const offset = seconds >= 30 ? 60 - seconds : -1 * seconds;\n    return dateByAddingSeconds(date, offset);\n}\n\nexport function dayOfYear(date) {\n    let returnedDayOfYear = 0;\n    const feb = Astronomical.isLeapYear(date.getFullYear()) ? 29 : 28;\n    const months = [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    for (let i = 0; i < date.getMonth(); i++) {\n        returnedDayOfYear += months[i];\n    }\n\n    returnedDayOfYear += date.getDate();\n\n    return returnedDayOfYear;\n}\n\nexport function isValidDate(date) {\n    return date instanceof Date && !isNaN(date.valueOf());\n}\n","/* eslint-disable max-params, max-lines */\nimport { degreesToRadians, radiansToDegrees, unwindAngle, normalizeToScale, quadrantShiftAngle } from './MathUtils';\nimport { dateByAddingSeconds } from './DateUtils';\n\nconst Astronomical = {\n\n    /* The geometric mean longitude of the sun in degrees. */\n    meanSolarLongitude(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 163 */\n        const term1 = 280.4664567;\n        const term2 = 36000.76983 * T;\n        const term3 = 0.0003032 * Math.pow(T, 2);\n        const L0 = term1 + term2 + term3;\n        return unwindAngle(L0);\n    },\n\n    /* The geometric mean longitude of the moon in degrees. */\n    meanLunarLongitude(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 144 */\n        const term1 = 218.3165;\n        const term2 = 481267.8813 * T;\n        const Lp = term1 + term2;\n        return unwindAngle(Lp);\n    },\n\n    ascendingLunarNodeLongitude(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 144 */\n        const term1 = 125.04452;\n        const term2 = 1934.136261 * T;\n        const term3 = 0.0020708 * Math.pow(T, 2);\n        const term4 = Math.pow(T, 3) / 450000;\n        const Omega = term1 - term2 + term3 + term4;\n        return unwindAngle(Omega);\n    },\n\n    /* The mean anomaly of the sun. */\n    meanSolarAnomaly(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 163 */\n        const term1 = 357.52911;\n        const term2 = 35999.05029 * T;\n        const term3 = 0.0001537 * Math.pow(T, 2);\n        const M = term1 + term2 - term3;\n        return unwindAngle(M);\n    },\n\n    /* The Sun's equation of the center in degrees. */\n    solarEquationOfTheCenter(julianCentury, meanAnomaly) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 164 */\n        const Mrad = degreesToRadians(meanAnomaly);\n        const term1 = (1.914602 - (0.004817 * T) - (0.000014 * Math.pow(T, 2))) * Math.sin(Mrad);\n        const term2 = (0.019993 - (0.000101 * T)) * Math.sin(2 * Mrad);\n        const term3 = 0.000289 * Math.sin(3 * Mrad);\n        return term1 + term2 + term3;\n    },\n\n    /* The apparent longitude of the Sun, referred to the\n        true equinox of the date. */\n    apparentSolarLongitude(julianCentury, meanLongitude) {\n        const T = julianCentury;\n        const L0 = meanLongitude;\n        /* Equation from Astronomical Algorithms page 164 */\n        const longitude = L0 + Astronomical.solarEquationOfTheCenter(T, Astronomical.meanSolarAnomaly(T));\n        const Omega = 125.04 - (1934.136 * T);\n        const Lambda = longitude - 0.00569 - (0.00478 * Math.sin(degreesToRadians(Omega)));\n        return unwindAngle(Lambda);\n    },\n\n    /* The mean obliquity of the ecliptic, formula\n        adopted by the International Astronomical Union.\n        Represented in degrees. */\n    meanObliquityOfTheEcliptic(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 147 */\n        const term1 = 23.439291;\n        const term2 = 0.013004167 * T;\n        const term3 = 0.0000001639 * Math.pow(T, 2);\n        const term4 = 0.0000005036 * Math.pow(T, 3);\n        return term1 - term2 - term3 + term4;\n    },\n\n    /* The mean obliquity of the ecliptic, corrected for\n        calculating the apparent position of the sun, in degrees. */\n    apparentObliquityOfTheEcliptic(julianCentury, meanObliquityOfTheEcliptic) {\n        const T = julianCentury;\n        const Epsilon0 = meanObliquityOfTheEcliptic;\n        /* Equation from Astronomical Algorithms page 165 */\n        const O = 125.04 - (1934.136 * T);\n        return Epsilon0 + (0.00256 * Math.cos(degreesToRadians(O)));\n    },\n\n    /* Mean sidereal time, the hour angle of the vernal equinox, in degrees. */\n    meanSiderealTime(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 165 */\n        const JD = (T * 36525) + 2451545.0;\n        const term1 = 280.46061837;\n        const term2 = 360.98564736629 * (JD - 2451545);\n        const term3 = 0.000387933 * Math.pow(T, 2);\n        const term4 = Math.pow(T, 3) / 38710000;\n        const Theta = term1 + term2 + term3 - term4;\n        return unwindAngle(Theta)\n    },\n\n    nutationInLongitude(julianCentury, solarLongitude, lunarLongitude, ascendingNode) {\n        const L0 = solarLongitude;\n        const Lp = lunarLongitude;\n        const Omega = ascendingNode;\n        /* Equation from Astronomical Algorithms page 144 */\n        const term1 = (-17.2/3600) * Math.sin(degreesToRadians(Omega));\n        const term2 =  (1.32/3600) * Math.sin(2 * degreesToRadians(L0));\n        const term3 =  (0.23/3600) * Math.sin(2 * degreesToRadians(Lp));\n        const term4 =  (0.21/3600) * Math.sin(2 * degreesToRadians(Omega));\n        return term1 - term2 - term3 + term4;\n    },\n\n    nutationInObliquity(julianCentury, solarLongitude, lunarLongitude, ascendingNode) {\n        const L0 = solarLongitude;\n        const Lp = lunarLongitude;\n        const Omega = ascendingNode;\n        /* Equation from Astronomical Algorithms page 144 */\n        const term1 =  (9.2/3600) * Math.cos(degreesToRadians(Omega));\n        const term2 = (0.57/3600) * Math.cos(2 * degreesToRadians(L0));\n        const term3 = (0.10/3600) * Math.cos(2 * degreesToRadians(Lp));\n        const term4 = (0.09/3600) * Math.cos(2 * degreesToRadians(Omega));\n        return term1 + term2 + term3 - term4;\n    },\n\n    altitudeOfCelestialBody(observerLatitude, declination, localHourAngle) {\n        const Phi = observerLatitude;\n        const delta = declination;\n        const H = localHourAngle;\n        /* Equation from Astronomical Algorithms page 93 */\n        const term1 = Math.sin(degreesToRadians(Phi)) * Math.sin(degreesToRadians(delta));\n        const term2 = Math.cos(degreesToRadians(Phi)) * Math.cos(degreesToRadians(delta)) * Math.cos(degreesToRadians(H));\n        return radiansToDegrees(Math.asin(term1 + term2));\n    },\n\n    approximateTransit(longitude, siderealTime, rightAscension) {\n        const L = longitude;\n        const Theta0 = siderealTime;\n        const a2 = rightAscension;\n        /* Equation from page Astronomical Algorithms 102 */\n        const Lw = L * -1;\n        return normalizeToScale((a2 + Lw - Theta0) / 360, 1);\n    },\n\n    /* The time at which the sun is at its highest point in the sky (in universal time) */\n    correctedTransit(approximateTransit, longitude, siderealTime, rightAscension, previousRightAscension, nextRightAscension) {\n        const m0 = approximateTransit;\n        const L = longitude;\n        const Theta0 = siderealTime;\n        const a2 = rightAscension;\n        const a1 = previousRightAscension;\n        const a3 = nextRightAscension;\n        /* Equation from page Astronomical Algorithms 102 */\n        const Lw = L * -1;\n        const Theta = unwindAngle((Theta0 + (360.985647 * m0)));\n        const a = unwindAngle(Astronomical.interpolateAngles(a2, a1, a3, m0));\n        const H = quadrantShiftAngle(Theta - Lw - a);\n        const dm = H / -360;\n        return (m0 + dm) * 24;\n    },\n\n    correctedHourAngle(approximateTransit, angle, coordinates, afterTransit, siderealTime,\n                                    rightAscension, previousRightAscension, nextRightAscension, declination, previousDeclination, nextDeclination) {\n        const m0 = approximateTransit;\n        const h0 = angle;\n        const Theta0 = siderealTime;\n        const a2 = rightAscension;\n        const a1 = previousRightAscension;\n        const a3 = nextRightAscension;\n        const d2 = declination;\n        const d1 = previousDeclination;\n        const d3 = nextDeclination;\n\n        /* Equation from page Astronomical Algorithms 102 */\n        const Lw = coordinates.longitude * -1;\n        const term1 = Math.sin(degreesToRadians(h0)) - (Math.sin(degreesToRadians(coordinates.latitude)) * Math.sin(degreesToRadians(d2)));\n        const term2 = Math.cos(degreesToRadians(coordinates.latitude)) * Math.cos(degreesToRadians(d2));\n        const H0 = radiansToDegrees(Math.acos(term1 / term2));\n        const m = afterTransit ? m0 + (H0 / 360) : m0 - (H0 / 360);\n        const Theta = unwindAngle((Theta0 + (360.985647 * m)));\n        const a = unwindAngle(Astronomical.interpolateAngles(a2, a1, a3, m));\n        const delta = Astronomical.interpolate(d2, d1, d3, m);\n        const H = (Theta - Lw - a);\n        const h = Astronomical.altitudeOfCelestialBody(coordinates.latitude, delta, H);\n        const term3 = h - h0;\n        const term4 = 360 * Math.cos(degreesToRadians(delta)) * Math.cos(degreesToRadians(coordinates.latitude)) * Math.sin(degreesToRadians(H));\n        const dm = term3 / term4;\n        return (m + dm) * 24;\n    },\n\n    /* Interpolation of a value given equidistant\n        previous and next values and a factor\n        equal to the fraction of the interpolated\n        point's time over the time between values. */\n    interpolate(y2, y1, y3, n) {\n        /* Equation from Astronomical Algorithms page 24 */\n        const a = y2 - y1;\n        const b = y3 - y2;\n        const c = b - a;\n        return y2 + ((n/2) * (a + b + (n * c)));\n    },\n\n    /* Interpolation of three angles, accounting for\n        angle unwinding. */\n    interpolateAngles(y2, y1, y3, n) {\n        /* Equation from Astronomical Algorithms page 24 */\n        const a = unwindAngle(y2 - y1);\n        const b = unwindAngle(y3 - y2);\n        const c = b - a;\n        return y2 + ((n/2) * (a + b + (n * c)));\n    },\n\n    /* The Julian Day for the given Gregorian date components. */\n    julianDay(year, month, day, hours) {\n        /* Equation from Astronomical Algorithms page 60 */\n        if (typeof hours === 'undefined') {\n            hours = 0;\n        }\n\n        const trunc = Math.trunc || function (x) { return x < 0 ? Math.ceil(x) : Math.floor(x); };\n\n        const Y = trunc(month > 2 ? year : year - 1);\n        const M = trunc(month > 2 ? month : month + 12);\n        const D = day + (hours / 24);\n\n        const A = trunc(Y/100);\n        const B = trunc(2 - A + trunc(A/4));\n\n        const i0 = trunc(365.25 * (Y + 4716));\n        const i1 = trunc(30.6001 * (M + 1));\n\n        return i0 + i1 + D + B - 1524.5;\n    },\n\n    /* Julian century from the epoch. */\n    julianCentury(julianDay) {\n        /* Equation from Astronomical Algorithms page 163 */\n        return (julianDay - 2451545.0) / 36525;\n    },\n\n    /* Whether or not a year is a leap year (has 366 days). */\n    isLeapYear(year) {\n        if (year % 4 !== 0) {\n            return false;\n        }\n\n        if (year % 100 === 0 && year % 400 !== 0) {\n            return false;\n        }\n\n        return true;\n    },\n\n    seasonAdjustedMorningTwilight(latitude, dayOfYear, year, sunrise) {\n        const a = 75 + ((28.65 / 55.0) * Math.abs(latitude));\n        const b = 75 + ((19.44 / 55.0) * Math.abs(latitude));\n        const c = 75 + ((32.74 / 55.0) * Math.abs(latitude));\n        const d = 75 + ((48.10 / 55.0) * Math.abs(latitude));\n\n        const adjustment = (function() {\n            const dyy = Astronomical.daysSinceSolstice(dayOfYear, year, latitude);\n            if ( dyy < 91) {\n                return a + ( b - a ) / 91.0 * dyy;\n            } else if ( dyy < 137) {\n                return b + ( c - b ) / 46.0 * ( dyy - 91 );\n            } else if ( dyy < 183 ) {\n                return c + ( d - c ) / 46.0 * ( dyy - 137 );\n            } else if ( dyy < 229 ) {\n                return d + ( c - d ) / 46.0 * ( dyy - 183 );\n            } else if ( dyy < 275 ) {\n                return c + ( b - c ) / 46.0 * ( dyy - 229 );\n            } else {\n                return b + ( a - b ) / 91.0 * ( dyy - 275 );\n            }\n        })();\n\n        return dateByAddingSeconds(sunrise, Math.round(adjustment * -60.0));\n    },\n\n    seasonAdjustedEveningTwilight(latitude, dayOfYear, year, sunset) {\n        const a = 75 + ((25.60 / 55.0) * Math.abs(latitude));\n        const b = 75 + ((2.050 / 55.0) * Math.abs(latitude));\n        const c = 75 - ((9.210 / 55.0) * Math.abs(latitude));\n        const d = 75 + ((6.140 / 55.0) * Math.abs(latitude));\n\n        const adjustment = (function() {\n            const dyy = Astronomical.daysSinceSolstice(dayOfYear, year, latitude);\n            if ( dyy < 91) {\n                return a + ( b - a ) / 91.0 * dyy;\n            } else if ( dyy < 137) {\n                return b + ( c - b ) / 46.0 * ( dyy - 91 );\n            } else if ( dyy < 183 ) {\n                return c + ( d - c ) / 46.0 * ( dyy - 137 );\n            } else if ( dyy < 229 ) {\n                return d + ( c - d ) / 46.0 * ( dyy - 183 );\n            } else if ( dyy < 275 ) {\n                return c + ( b - c ) / 46.0 * ( dyy - 229 );\n            } else {\n                return b + ( a - b ) / 91.0 * ( dyy - 275 );\n            }\n        })();\n\n        return dateByAddingSeconds(sunset, Math.round(adjustment * 60.0));\n    },\n\n    daysSinceSolstice(dayOfYear, year, latitude) {\n        let daysSinceSolstice = 0;\n        const northernOffset = 10;\n        const southernOffset = Astronomical.isLeapYear(year) ? 173 : 172;\n        const daysInYear = Astronomical.isLeapYear(year) ? 366 : 365;\n\n        if (latitude >= 0) {\n            daysSinceSolstice = dayOfYear + northernOffset;\n            if (daysSinceSolstice >= daysInYear) {\n                daysSinceSolstice = daysSinceSolstice - daysInYear;\n            }\n        } else {\n            daysSinceSolstice = dayOfYear - southernOffset;\n            if (daysSinceSolstice < 0) {\n                daysSinceSolstice = daysSinceSolstice + daysInYear;\n            }\n        }\n\n        return daysSinceSolstice;\n    }\n};\n\nexport default Astronomical;","import Astronomical from './Astronomical';\nimport { degreesToRadians, radiansToDegrees, unwindAngle } from './MathUtils';\n\nexport default class SolarCoordinates {\n    constructor(julianDay) {\n        const T = Astronomical.julianCentury(julianDay);\n        const L0 = Astronomical.meanSolarLongitude(T);\n        const Lp = Astronomical.meanLunarLongitude(T);\n        const Omega = Astronomical.ascendingLunarNodeLongitude(T);\n        const Lambda = degreesToRadians(Astronomical.apparentSolarLongitude(T, L0));\n        const Theta0 = Astronomical.meanSiderealTime(T);\n        const dPsi = Astronomical.nutationInLongitude(T, L0, Lp, Omega);\n        const dEpsilon = Astronomical.nutationInObliquity(T, L0, Lp, Omega);\n        const Epsilon0 = Astronomical.meanObliquityOfTheEcliptic(T);\n        const EpsilonApparent = degreesToRadians(Astronomical.apparentObliquityOfTheEcliptic(T, Epsilon0));\n\n        /* declination: The declination of the sun, the angle between\n            the rays of the Sun and the plane of the Earth's\n            equator, in degrees.\n            Equation from Astronomical Algorithms page 165 */\n        this.declination = radiansToDegrees(Math.asin(Math.sin(EpsilonApparent) * Math.sin(Lambda)));\n\n        /* rightAscension: Right ascension of the Sun, the angular distance on the\n            celestial equator from the vernal equinox to the hour circle,\n            in degrees.\n            Equation from Astronomical Algorithms page 165 */\n        this.rightAscension = unwindAngle(radiansToDegrees(Math.atan2(Math.cos(EpsilonApparent) * Math.sin(Lambda), Math.cos(Lambda))));\n\n        /* apparentSiderealTime: Apparent sidereal time, the hour angle of the vernal\n            equinox, in degrees.\n            Equation from Astronomical Algorithms page 88 */\n        this.apparentSiderealTime = Theta0 + (((dPsi * 3600) * Math.cos(degreesToRadians(Epsilon0 + dEpsilon))) / 3600);\n    }\n}\n\n","import Astronomical from './Astronomical';\nimport { degreesToRadians, radiansToDegrees } from './MathUtils'\nimport SolarCoordinates from './SolarCoordinates';\n\nexport default class SolarTime {\n    constructor(date, coordinates) {\n        const julianDay = Astronomical.julianDay(date.getFullYear(), date.getMonth() + 1, date.getDate(), 0);\n\n        this.observer = coordinates;\n        this.solar = new SolarCoordinates(julianDay);\n\n        this.prevSolar = new SolarCoordinates(julianDay - 1);\n        this.nextSolar = new SolarCoordinates(julianDay + 1);\n\n        const m0 = Astronomical.approximateTransit(coordinates.longitude, this.solar.apparentSiderealTime, this.solar.rightAscension);\n        const solarAltitude = -50.0 / 60.0;\n\n        this.approxTransit = m0;\n\n        this.transit = Astronomical.correctedTransit(m0, coordinates.longitude, this.solar.apparentSiderealTime, \n            this.solar.rightAscension, this.prevSolar.rightAscension, this.nextSolar.rightAscension);\n\n        this.sunrise = Astronomical.correctedHourAngle(m0, solarAltitude, coordinates, false, this.solar.apparentSiderealTime, \n            this.solar.rightAscension, this.prevSolar.rightAscension, this.nextSolar.rightAscension, \n            this.solar.declination, this.prevSolar.declination, this.nextSolar.declination);\n\n        this.sunset = Astronomical.correctedHourAngle(m0, solarAltitude, coordinates, true, this.solar.apparentSiderealTime, \n            this.solar.rightAscension, this.prevSolar.rightAscension, this.nextSolar.rightAscension, \n            this.solar.declination, this.prevSolar.declination, this.nextSolar.declination);\n    }\n\n    hourAngle(angle, afterTransit) {\n        return Astronomical.correctedHourAngle(this.approxTransit, angle, this.observer, afterTransit, this.solar.apparentSiderealTime, \n            this.solar.rightAscension, this.prevSolar.rightAscension, this.nextSolar.rightAscension, \n            this.solar.declination, this.prevSolar.declination, this.nextSolar.declination);\n    }\n\n    afternoon(shadowLength) {\n        // TODO source shadow angle calculation\n        const tangent = Math.abs(this.observer.latitude - this.solar.declination);\n        const inverse = shadowLength + Math.tan(degreesToRadians(tangent));\n        const angle = radiansToDegrees(Math.atan(1.0 / inverse));\n        return this.hourAngle(angle, true);\n    }\n}\n\n\n","export default class TimeComponents {\n    constructor(number) {\n        this.hours = Math.floor(number);\n        this.minutes = Math.floor((number - this.hours) * 60);\n        this.seconds = Math.floor((number - (this.hours + this.minutes / 60)) * 60 * 60);\n        return this;\n    }\n    \n    utcDate(year, month, date) {\n        return new Date(Date.UTC(year, month, date, this.hours, this.minutes, this.seconds));\n    }\n}\n","const Prayer = {\n    Fajr: 'fajr',\n    Sunrise: 'sunrise',\n    Dhuhr: 'dhuhr',\n    Asr: 'asr',\n    Maghrib: 'maghrib',\n    Isha: 'isha',\n    None: 'none'\n};\n\nexport default Prayer;","export const Madhab = {\n    Shafi: 'shafi',\n    Hanafi: 'hanafi'\n};\n\nexport function shadowLength(madhab) {\n    switch (madhab) {\n        case Madhab.Shafi:\n            return 1;\n        case Madhab.Hanafi:\n            return 2\n        default:\n            throw \"Invalid Madhab\";\n    }\n}\n","import SolarTime from './SolarTime';\nimport { dateByAddingDays } from './DateUtils';\n\nexport const PolarCircleResolution = {\n  AqrabBalad: 'AqrabBalad',\n  AqrabYaum: 'AqrabYaum',\n  Unresolved: 'Unresolved'\n};\n\nconst LATITUDE_VARIATION_STEP = 0.5; // Degrees to add/remove at each resolution step\nconst UNSAFE_LATITUDE = 65; // Based on https://en.wikipedia.org/wiki/Midnight_sun\n\nconst isValidSolarTime = (solarTime) => solarTime && !isNaN(solarTime.sunrise) && !isNaN(solarTime.sunset);\n\nconst aqrabYaumResolver = (coordinates, date, daysAdded = 1, direction = 1) => {\n  if (daysAdded > Math.ceil(365 / 2)) {\n    return null;\n  }\n  const testDate = new Date(date.getTime());\n  testDate.setDate(testDate.getDate() + (direction * daysAdded));\n  const tomorrow = dateByAddingDays(testDate, 1);\n  const solarTime = new SolarTime(testDate, coordinates);\n  const tomorrowSolarTime = new SolarTime(tomorrow, coordinates);\n\n  if (!isValidSolarTime(solarTime) || !isValidSolarTime(tomorrowSolarTime)) {\n    return aqrabYaumResolver(coordinates, date, daysAdded + (direction > 0 ? 0 : 1), -direction);\n  }\n\n  return {\n    date,\n    tomorrow,\n    coordinates,\n    solarTime,\n    tomorrowSolarTime,\n  };\n}\n\nconst aqrabBaladResolver = (coordinates, date, latitude) => {\n  const solarTime = new SolarTime(date, { ...coordinates, latitude });\n  const tomorrow = dateByAddingDays(date, 1);\n  const tomorrowSolarTime = new SolarTime(tomorrow, { ...coordinates, latitude });\n  if (!isValidSolarTime(solarTime) || !isValidSolarTime(tomorrowSolarTime)) {\n    return (Math.abs(latitude) >= UNSAFE_LATITUDE) ?\n      aqrabBaladResolver(coordinates, date, latitude - Math.sign(latitude) * LATITUDE_VARIATION_STEP)\n      : null;\n  }\n\n  return {\n    date,\n    tomorrow,\n    coordinates: { latitude, longitude: coordinates.longitude },\n    solarTime,\n    tomorrowSolarTime,\n  };\n};\n\nexport const polarCircleResolvedValues = (resolver, date, coordinates) => {\n  const defaultReturn = {\n    date,\n    tomorrow: dateByAddingDays(date, 1),\n    coordinates,\n    solarTime: new SolarTime(date, coordinates),\n    tomorrowSolarTime: new SolarTime(dateByAddingDays(date, 1), coordinates),\n  };\n\n  switch (resolver) {\n    case PolarCircleResolution.AqrabYaum: {\n      return aqrabYaumResolver(coordinates, date) || defaultReturn;\n    }\n    case PolarCircleResolution.AqrabBalad: {\n      const { latitude } = coordinates;\n      return aqrabBaladResolver(coordinates, date, latitude - (Math.sign(latitude) * LATITUDE_VARIATION_STEP)) || defaultReturn;\n    }\n    default: {\n      return defaultReturn;\n    }\n  }\n};\n","import SolarTime from './SolarTime';\nimport TimeComponents from './TimeComponents';\nimport Prayer from './Prayer';\nimport Astronomical from './Astronomical';\nimport {\n    dateByAddingDays,\n    dateByAddingMinutes,\n    dateByAddingSeconds,\n    roundedMinute,\n    dayOfYear,\n    isValidDate\n} from './DateUtils';\nimport { shadowLength } from './Madhab';\nimport { PolarCircleResolution, polarCircleResolvedValues } from './PolarCircleResolution';\n\nexport default class PrayerTimes {\n    // eslint-disable-next-line complexity\n    constructor(coordinates, date, calculationParameters) {\n        this.coordinates = coordinates;\n        this.date = date;\n        this.calculationParameters = calculationParameters;\n\n        let solarTime = new SolarTime(date, coordinates);\n\n        let fajrTime;\n        let sunriseTime;\n        let dhuhrTime;\n        let asrTime;\n        let maghribTime;\n        let ishaTime;\n\n        let nightFraction;\n\n        dhuhrTime = new TimeComponents(solarTime.transit).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n        sunriseTime = new TimeComponents(solarTime.sunrise).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n        let sunsetTime = new TimeComponents(solarTime.sunset).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n        let tomorrow = dateByAddingDays(date, 1);\n        let tomorrowSolarTime = new SolarTime(tomorrow, coordinates);\n\n        const polarCircleResolver = calculationParameters.polarCircleResolution;\n        if (\n          (!isValidDate(sunriseTime) || !isValidDate(sunsetTime) || isNaN(tomorrowSolarTime.sunrise))\n          && polarCircleResolver !== PolarCircleResolution.Unresolved\n        ) {\n            const resolved = polarCircleResolvedValues(polarCircleResolver, date, coordinates);\n            this.coordinates = resolved.coordinates;\n            this.date.setTime(resolved.date.getTime());\n            solarTime = resolved.solarTime;\n            tomorrow = resolved.tomorrow;\n            tomorrowSolarTime = resolved.tomorrowSolarTime;\n            const dateComponents = [date.getFullYear(), date.getMonth(), date.getDate()];\n\n            dhuhrTime = new TimeComponents(solarTime.transit).utcDate(...dateComponents);\n            sunriseTime = new TimeComponents(solarTime.sunrise).utcDate(...dateComponents);\n            sunsetTime = new TimeComponents(solarTime.sunset).utcDate(...dateComponents);\n        }\n\n        // eslint-disable-next-line prefer-const\n        asrTime = new TimeComponents(solarTime.afternoon(shadowLength(calculationParameters.madhab))).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n        const tomorrowSunrise = new TimeComponents(tomorrowSolarTime.sunrise).utcDate(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate());\n        const night = (tomorrowSunrise - sunsetTime) / 1000;\n\n        fajrTime = new TimeComponents(solarTime.hourAngle(-1 * calculationParameters.fajrAngle, false)).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n        // special case for moonsighting committee above latitude 55\n        if (calculationParameters.method === \"MoonsightingCommittee\" && coordinates.latitude >= 55) {\n            nightFraction = night / 7;\n            fajrTime = dateByAddingSeconds(sunriseTime, -nightFraction);\n        }\n\n        const safeFajr = (function () {\n            if (calculationParameters.method === \"MoonsightingCommittee\") {\n                return Astronomical.seasonAdjustedMorningTwilight(coordinates.latitude, dayOfYear(date), date.getFullYear(), sunriseTime);\n            }\n            else {\n                const portion = calculationParameters.nightPortions().fajr;\n                nightFraction = portion * night;\n                return dateByAddingSeconds(sunriseTime, -nightFraction);\n            }\n        })();\n\n        if (fajrTime === null || isNaN(fajrTime.getTime()) || safeFajr > fajrTime) {\n            fajrTime = safeFajr;\n        }\n\n        if (calculationParameters.ishaInterval > 0) {\n            ishaTime = dateByAddingMinutes(sunsetTime, calculationParameters.ishaInterval);\n        } else {\n            ishaTime = new TimeComponents(solarTime.hourAngle(-1 * calculationParameters.ishaAngle, true)).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n            // special case for moonsighting committee above latitude 55\n            if (calculationParameters.method === \"MoonsightingCommittee\" && coordinates.latitude >= 55) {\n                nightFraction = night / 7;\n                ishaTime = dateByAddingSeconds(sunsetTime, nightFraction);\n            }\n\n            const safeIsha = (function () {\n                if (calculationParameters.method === \"MoonsightingCommittee\") {\n                    return Astronomical.seasonAdjustedEveningTwilight(coordinates.latitude, dayOfYear(date), date.getFullYear(), sunsetTime);\n                }\n                else {\n                    const portion = calculationParameters.nightPortions().isha;\n                    nightFraction = portion * night;\n                    return dateByAddingSeconds(sunsetTime, nightFraction);\n                }\n            })();\n\n            if (ishaTime == null || isNaN(ishaTime.getTime()) || safeIsha < ishaTime) {\n                ishaTime = safeIsha;\n            }\n        }\n\n        maghribTime = sunsetTime;\n        if (calculationParameters.maghribAngle) {\n            const angleBasedMaghrib = new TimeComponents(solarTime.hourAngle(-1 * calculationParameters.maghribAngle, true)).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n            if (sunsetTime < angleBasedMaghrib && ishaTime > angleBasedMaghrib) {\n                maghribTime = angleBasedMaghrib;\n            }\n        }\n\n        const fajrAdjustment = (calculationParameters.adjustments.fajr || 0) + (calculationParameters.methodAdjustments.fajr || 0);\n        const sunriseAdjustment = (calculationParameters.adjustments.sunrise || 0) + (calculationParameters.methodAdjustments.sunrise || 0);\n        const dhuhrAdjustment = (calculationParameters.adjustments.dhuhr || 0) + (calculationParameters.methodAdjustments.dhuhr || 0);\n        const asrAdjustment = (calculationParameters.adjustments.asr || 0) + (calculationParameters.methodAdjustments.asr || 0);\n        const maghribAdjustment = (calculationParameters.adjustments.maghrib || 0) + (calculationParameters.methodAdjustments.maghrib || 0);\n        const ishaAdjustment = (calculationParameters.adjustments.isha || 0) + (calculationParameters.methodAdjustments.isha || 0);\n\n        this.fajr = roundedMinute(dateByAddingMinutes(fajrTime, fajrAdjustment));\n        this.sunrise = roundedMinute(dateByAddingMinutes(sunriseTime, sunriseAdjustment));\n        this.dhuhr = roundedMinute(dateByAddingMinutes(dhuhrTime, dhuhrAdjustment));\n        this.asr = roundedMinute(dateByAddingMinutes(asrTime, asrAdjustment));\n        this.maghrib = roundedMinute(dateByAddingMinutes(maghribTime, maghribAdjustment));\n        this.isha = roundedMinute(dateByAddingMinutes(ishaTime, ishaAdjustment));\n    }\n\n    timeForPrayer(prayer) {\n        if (prayer === Prayer.Fajr) {\n            return this.fajr;\n        }\n        else if (prayer === Prayer.Sunrise) {\n            return this.sunrise;\n        }\n        else if (prayer === Prayer.Dhuhr) {\n            return this.dhuhr;\n        }\n        else if (prayer === Prayer.Asr) {\n            return this.asr;\n        }\n        else if (prayer === Prayer.Maghrib) {\n            return this.maghrib;\n        }\n        else if (prayer === Prayer.Isha) {\n            return this.isha;\n        }\n        else {\n            return null;\n        }\n    }\n\n    currentPrayer(date) {\n        if (typeof date === 'undefined') {\n            date = new Date();\n        }\n        if (date >= this.isha) {\n            return Prayer.Isha;\n        }\n        else if (date >= this.maghrib) {\n            return Prayer.Maghrib;\n        }\n        else if (date >= this.asr) {\n            return Prayer.Asr;\n        }\n        else if (date >= this.dhuhr) {\n            return Prayer.Dhuhr;\n        }\n        else if (date >= this.sunrise) {\n            return Prayer.Sunrise;\n        }\n        else if (date >= this.fajr) {\n            return Prayer.Fajr;\n        }\n        else {\n            return Prayer.None;\n        }\n    }\n\n    nextPrayer(date) {\n        if (typeof date === 'undefined') {\n            date = new Date();\n        }\n        if (date >= this.isha) {\n            return Prayer.None;\n        }\n        else if (date >= this.maghrib) {\n            return Prayer.Isha;\n        }\n        else if (date >= this.asr) {\n            return Prayer.Maghrib;\n        }\n        else if (date >= this.dhuhr) {\n            return Prayer.Asr;\n        }\n        else if (date >= this.sunrise) {\n            return Prayer.Dhuhr;\n        }\n        else if (date >= this.fajr) {\n            return Prayer.Sunrise;\n        }\n        else {\n            return Prayer.Fajr;\n        }\n    }\n}\n\n","const HighLatitudeRule = {\n    MiddleOfTheNight: 'middleofthenight',\n    SeventhOfTheNight: 'seventhofthenight',\n    TwilightAngle: 'twilightangle',\n\n    recommended(coordinates) {\n        if (coordinates.latitude > 48) {\n            return HighLatitudeRule.SeventhOfTheNight;\n        } else {\n            return HighLatitudeRule.MiddleOfTheNight;\n        }\n    }\n};\n\nexport default HighLatitudeRule;","import { Madhab } from './Madhab';\nimport HighLatitudeRule from './HighLatitudeRule';\nimport { PolarCircleResolution } from './PolarCircleResolution';\n\nexport default class CalculationParameters {\n    constructor(methodName, fajrAngle, ishaAngle, ishaInterval, maghribAngle) {\n        this.method = methodName || \"Other\";\n        this.fajrAngle = fajrAngle || 0;\n        this.ishaAngle = ishaAngle || 0;\n        this.ishaInterval = ishaInterval || 0;\n        this.maghribAngle = maghribAngle;\n        this.madhab = Madhab.Shafi;\n        this.highLatitudeRule = HighLatitudeRule.MiddleOfTheNight;\n        this.adjustments = { fajr: 0, sunrise: 0, dhuhr: 0, asr: 0, maghrib: 0, isha: 0 };\n        this.methodAdjustments = { fajr: 0, sunrise: 0, dhuhr: 0, asr: 0, maghrib: 0, isha: 0 };\n        this.polarCircleResolution = PolarCircleResolution.Unresolved;\n    }\n\n    nightPortions() {\n        switch (this.highLatitudeRule) {\n            case HighLatitudeRule.MiddleOfTheNight:\n                return { fajr: 1 / 2, isha: 1 / 2 };\n            case HighLatitudeRule.SeventhOfTheNight:\n                return { fajr: 1 / 7, isha: 1 / 7 };\n            case HighLatitudeRule.TwilightAngle:\n                return { fajr: this.fajrAngle / 60, isha: this.ishaAngle / 60 };\n            default:\n                throw(`Invalid high latitude rule found when attempting to compute night portions: ${this.highLatitudeRule}`);\n        }\n    }\n}\n","import CalculationParameters from './CalculationParameters';\n\nconst CalculationMethod = {\n    // Muslim World League\n    MuslimWorldLeague() {\n        const params = new CalculationParameters(\"MuslimWorldLeague\", 18, 17);\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // Egyptian General Authority of Survey\n    Egyptian() {\n        const params = new CalculationParameters(\"Egyptian\", 19.5, 17.5);\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // University of Islamic Sciences, Karachi\n    Karachi() {\n        const params = new CalculationParameters(\"Karachi\", 18, 18);\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // Umm al-Qura University, Makkah\n    UmmAlQura() {\n        return new CalculationParameters(\"UmmAlQura\", 18.5, 0, 90);\n    },\n\n    // Dubai\n    Dubai() {\n        const params = new CalculationParameters(\"Dubai\", 18.2, 18.2);\n        params.methodAdjustments = { sunrise: -3, dhuhr: 3, asr: 3, maghrib: 3 };\n        return params;\n    },\n\n    // Moonsighting Committee\n    MoonsightingCommittee() {\n        const params = new CalculationParameters(\"MoonsightingCommittee\", 18, 18);\n        params.methodAdjustments = { dhuhr: 5, maghrib: 3 };\n        return params;\n    },\n\n    // ISNA\n    NorthAmerica() {\n        const params = new CalculationParameters(\"NorthAmerica\", 15, 15);\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // Kuwait\n    Kuwait() {\n        return new CalculationParameters(\"Kuwait\", 18, 17.5);\n    },\n\n    // Qatar\n    Qatar() {\n        return new CalculationParameters(\"Qatar\", 18, 0, 90);\n    },\n\n    // Singapore\n    Singapore() {\n        const params = new CalculationParameters(\"Singapore\", 20, 18);\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // Institute of Geophysics, University of Tehran\n    Tehran() {\n        const params = new CalculationParameters(\"Tehran\", 17.7, 14, 0, 4.5);\n        return params;\n    },\n\n    // Dianet\n    Turkey() {\n        const params = new CalculationParameters(\"Turkey\", 18, 17);\n        params.methodAdjustments = { sunrise: -7, dhuhr: 5, asr: 4, maghrib: 7 };\n        return params;\n    },\n\n    // Other\n    Other() {\n        return new CalculationParameters(\"Other\", 0, 0);\n    }\n};\n\nexport default CalculationMethod;","import Coordinates from './Coordinates'\nimport { degreesToRadians, radiansToDegrees, unwindAngle } from './MathUtils'\n\nexport default function qibla(coordinates) {\n    const makkah = new Coordinates(21.4225241, 39.8261818);\n\n    // Equation from \"Spherical Trigonometry For the use of colleges and schools\" page 50\n    const term1 = (\n        Math.sin(degreesToRadians(makkah.longitude) -\n        degreesToRadians(coordinates.longitude))\n    );\n    const term2 = (\n        Math.cos(degreesToRadians(coordinates.latitude)) *\n        Math.tan(degreesToRadians(makkah.latitude))\n    );\n    const term3 = (\n        Math.sin(degreesToRadians(coordinates.latitude)) *\n        Math.cos(degreesToRadians(makkah.longitude) -\n        degreesToRadians(coordinates.longitude))\n    );\n    const angle = Math.atan2(term1, term2 - term3);\n\n    return unwindAngle(radiansToDegrees(angle));\n}\n","import { dateByAddingDays, dateByAddingSeconds, roundedMinute } from './DateUtils';\nimport PrayerTimes from './PrayerTimes';\n\nexport default class SunnahTimes {\n    constructor(prayerTimes) {\n        const date = prayerTimes.date;\n        const nextDay = dateByAddingDays(date, 1);\n        const nextDayPrayerTimes = new PrayerTimes(prayerTimes.coordinates, nextDay, prayerTimes.calculationParameters);\n\n        const nightDuration = (nextDayPrayerTimes.fajr.getTime() - prayerTimes.maghrib.getTime()) / 1000.0;\n\n        this.middleOfTheNight = roundedMinute(dateByAddingSeconds(prayerTimes.maghrib, nightDuration / 2));\n        this.lastThirdOfTheNight = roundedMinute(dateByAddingSeconds(prayerTimes.maghrib, nightDuration * (2 / 3)));\n    }\n}\n\n","import Coordinates from './Coordinates';\nimport PrayerTimes from './PrayerTimes';\nimport Prayer from './Prayer';\nimport { Madhab } from './Madhab';\nimport HighLatitudeRule from './HighLatitudeRule';\nimport CalculationMethod from './CalculationMethod';\nimport CalculationParameters from './CalculationParameters';\nimport Qibla from './Qibla';\nimport SunnahTimes from './SunnahTimes';\nimport { PolarCircleResolution } from './PolarCircleResolution';\n\nconst adhan = {\n    Prayer,\n    Madhab,\n    HighLatitudeRule,\n    Coordinates,\n    CalculationParameters,\n    CalculationMethod,\n    PrayerTimes,\n    SunnahTimes,\n    Qibla,\n    PolarCircleResolution,\n};\n\nexport default adhan;"],"sourceRoot":""}